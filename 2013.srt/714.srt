
1
00:00:10.156 --> 00:00:11.816
>> Good morning.

2
00:00:12.316 --> 00:00:16.326
[ Applause ]

3
00:00:16.826 --> 00:00:18.196
Good very early morning.

4
00:00:19.156 --> 00:00:22.346
My name is Katie Skinner
and I work with teams all

5
00:00:22.346 --> 00:00:24.306
across Apple on user privacy.

6
00:00:25.026 --> 00:00:30.246
This includes iOS, OS X,
iCloud, iWork, iTunes,

7
00:00:30.246 --> 00:00:33.366
and along with David
Stites, David give a wave.

8
00:00:33.366 --> 00:00:35.586
We're going be to talking

9
00:00:35.586 --> 00:00:38.646
about protecting your user's
privacy for the next hour.

10
00:00:39.276 --> 00:00:41.846
I'm going to start out talking

11
00:00:41.846 --> 00:00:44.966
about the part privacy
plays in your reputation.

12
00:00:46.196 --> 00:00:48.266
Then we're going to do an
update on changes coming

13
00:00:48.266 --> 00:00:50.266
to identifiers in iOS 7.

14
00:00:51.716 --> 00:00:53.816
David will talk about
new data types

15
00:00:53.816 --> 00:00:57.166
for data isolation this year,
and for the new developers

16
00:00:57.166 --> 00:01:00.056
in the room, walk
through an example on how

17
00:00:57.166 --> 00:01:00.056
in the room, walk
through an example on how

18
00:01:00.056 --> 00:01:02.026
to take advantage
of data isolation.

19
00:01:03.326 --> 00:01:04.775
Then, I'll finish off talking

20
00:01:04.775 --> 00:01:08.146
about some privacy best
practices, both policies

21
00:01:08.146 --> 00:01:10.336
and some techniques
that you can apply.

22
00:01:14.576 --> 00:01:19.646
So reputation, your users
are your be-all, end-all.

23
00:01:20.146 --> 00:01:21.986
They're your most
important thing.

24
00:01:23.156 --> 00:01:25.916
They're the people
who download your app,

25
00:01:26.096 --> 00:01:28.086
launch your app 2
o'clock in the afternoon

26
00:01:28.086 --> 00:01:29.236
when they're bored at work.

27
00:01:30.156 --> 00:01:33.686
Or alternately stop
launching your app,

28
00:01:33.686 --> 00:01:35.056
even delete it of their device.

29
00:01:36.186 --> 00:01:40.676
So maintaining a good
relationship with them is key,

30
00:01:40.676 --> 00:01:43.606
and privacy is a
big part of that.

31
00:01:44.376 --> 00:01:46.676
In the next hour, we're
going to talking about ways

32
00:01:46.676 --> 00:01:50.006
that you can maintain that
reputation and keep it strong.

33
00:01:53.936 --> 00:01:58.346
So last year WWDC, we talked
about long-lived identifiers.

34
00:01:58.746 --> 00:02:00.186
We talked about the UDID,

35
00:01:58.746 --> 00:02:00.186
We talked about the UDID,

36
00:02:00.186 --> 00:02:03.436
and then we introduced
purpose-scoped [phonetic]

37
00:02:03.626 --> 00:02:04.926
replacement APIs.

38
00:02:05.626 --> 00:02:09.526
Now, I will go over the
replacement APIs again,

39
00:02:10.265 --> 00:02:11.706
but first I want
to make a point.

40
00:02:11.706 --> 00:02:15.636
iOS as a platform has
continued to grow.

41
00:02:15.636 --> 00:02:19.406
Apps can and are doing
amazing new things.

42
00:02:20.316 --> 00:02:22.976
They're filling new purposes
that maybe even last year,

43
00:02:22.976 --> 00:02:23.956
we hadn't even thought of.

44
00:02:24.576 --> 00:02:26.586
It's really thanks to
all of you here today

45
00:02:26.586 --> 00:02:29.956
that we really have that.

46
00:02:29.956 --> 00:02:32.216
And as the platform grows,

47
00:02:33.756 --> 00:02:37.116
we feel like a single long-lived
identifier should not be

48
00:02:37.116 --> 00:02:38.706
absorbing all of that growth.

49
00:02:40.086 --> 00:02:41.326
That's why we think

50
00:02:41.326 --> 00:02:45.156
that purpose-scoped
identifiers are the future.

51
00:02:45.696 --> 00:02:51.806
So now, I'm going to go through
the UDID replacement APIs.

52
00:02:52.256 --> 00:02:55.996
There are three, the first one
is the Application Identifier

53
00:02:56.416 --> 00:02:58.266
and it is scoped
per application.

54
00:02:59.496 --> 00:03:01.756
The second is the
Vendor Identifier

55
00:02:59.496 --> 00:03:01.756
The second is the
Vendor Identifier

56
00:03:01.846 --> 00:03:04.116
and it scoped per developer.

57
00:03:05.526 --> 00:03:09.006
The third is the Advertising
identifier used for advertising.

58
00:03:09.536 --> 00:03:13.926
Now before we go any further, I
want to clarify the difference

59
00:03:13.926 --> 00:03:16.916
between the UDID and a UUID.

60
00:03:17.246 --> 00:03:19.116
They sound very, very similar.

61
00:03:19.816 --> 00:03:23.676
So a UDID stands for
Unique Device Identifier

62
00:03:24.296 --> 00:03:27.166
and is unique hardware-based
identifier.

63
00:03:28.456 --> 00:03:32.056
Now, the UUID stands for
Universally Unique Identifier

64
00:03:32.056 --> 00:03:34.846
and is unique random identifier.

65
00:03:35.336 --> 00:03:37.056
So, the key takeaway here is

66
00:03:37.326 --> 00:03:41.356
for single device,
there is one UDID.

67
00:03:41.876 --> 00:03:44.766
But on that same device,
there are more UUIDs

68
00:03:44.766 --> 00:03:46.736
on that device than
apps installed.

69
00:03:50.256 --> 00:03:53.316
As I'm sure as many of
you know, as of May 1st,

70
00:03:53.316 --> 00:03:56.226
apps and app updates
that reference

71
00:03:56.276 --> 00:03:59.666
to UDID are no longer being
accepted to the App Store.

72
00:04:00.796 --> 00:04:03.306
In iOS 7, the API is removed.

73
00:04:04.446 --> 00:04:06.696
If you have an existing
app in the Apps Store

74
00:04:06.696 --> 00:04:08.396
that still references UDID,

75
00:04:08.396 --> 00:04:11.276
it will now be returned
the Vendor Identifier.

76
00:04:12.936 --> 00:04:15.156
So, let's go through
this change to behavior.

77
00:04:16.036 --> 00:04:19.086
Up top, we have what you
would recognize as the UDID.

78
00:04:19.935 --> 00:04:24.036
So in iOS 7, now your old
app will receive a series

79
00:04:24.036 --> 00:04:26.616
of Fs [phonetic] followed
by the Vendor Identifier

80
00:04:27.216 --> 00:04:28.476
with the dashes removed.

81
00:04:29.866 --> 00:04:31.346
So, let's build one.

82
00:04:31.346 --> 00:04:36.326
Here we have the Fs then
the Vendor identifier

83
00:04:36.646 --> 00:04:37.806
without the spaces.

84
00:04:39.126 --> 00:04:41.156
Now, you can see the top value

85
00:04:41.156 --> 00:04:42.906
and the bottom value
are very different.

86
00:04:43.916 --> 00:04:47.836
So, if you have an old app
that references the UDID,

87
00:04:47.836 --> 00:04:50.086
you must test on iOS 7.

88
00:04:51.146 --> 00:04:53.766
Understand the impact
that this has to your app

89
00:04:53.766 --> 00:04:56.086
and insure this will not have
any impact on your users.

90
00:04:57.496 --> 00:05:01.076
If you required changes, once
you test, you can find out

91
00:04:57.496 --> 00:05:01.076
If you required changes, once
you test, you can find out

92
00:05:01.196 --> 00:05:05.036
and then update your app
before iOS 7 hits wide release.

93
00:05:07.556 --> 00:05:11.686
Now, you may have tried
updating your app but it failed

94
00:05:11.686 --> 00:05:15.926
and was rejected from the App
Store due to UDID references.

95
00:05:16.996 --> 00:05:18.306
If this has happened to you,

96
00:05:18.616 --> 00:05:19.806
this slide is are
great reference.

97
00:05:20.276 --> 00:05:24.036
It goes through steps explaining
how you can find the references

98
00:05:24.036 --> 00:05:25.386
within your code.

99
00:05:25.676 --> 00:05:29.256
Now, the most common place
that references are found is

100
00:05:29.256 --> 00:05:30.556
in a third-party library.

101
00:05:31.606 --> 00:05:36.076
So, if this happened to you, go
through these steps, find it,

102
00:05:36.076 --> 00:05:41.246
take it out and then
resubmit to the Apps Store.

103
00:05:41.426 --> 00:05:43.436
Now, the Vendor Identifier
is one

104
00:05:43.436 --> 00:05:45.356
of the purpose-scoped
replacements.

105
00:05:47.396 --> 00:05:51.626
We introduced it in
iOS 6 and it is a UUID.

106
00:05:51.626 --> 00:05:56.546
It provides a device,
unique mapping per team ID.

107
00:05:57.756 --> 00:05:59.946
Now, your team ID, that's
the same as developer

108
00:05:59.946 --> 00:06:03.756
and you can find what your
team ID is on iTunes Connect.

109
00:05:59.946 --> 00:06:03.756
and you can find what your
team ID is on iTunes Connect.

110
00:06:04.416 --> 00:06:08.086
This mapping is stored
and managed by iOS.

111
00:06:08.636 --> 00:06:12.096
The value will be maintained,
it will stay around as long

112
00:06:12.096 --> 00:06:16.696
as at least one app for
your team ID is installed

113
00:06:16.696 --> 00:06:18.596
on the device.

114
00:06:18.696 --> 00:06:22.246
If all apps are deleted,
this value is also erased.

115
00:06:23.916 --> 00:06:25.886
Now this mapping
table is backed up

116
00:06:25.886 --> 00:06:29.016
but it will not be
restored across devices.

117
00:06:29.186 --> 00:06:32.476
Now, what is restore
across devices mean?

118
00:06:33.646 --> 00:06:38.756
If a user takes the backup on
device one and then installs it

119
00:06:38.756 --> 00:06:41.996
on device two, that's
restoring it across devices.

120
00:06:42.686 --> 00:06:46.506
The most common case of this is
when users purchase a new device

121
00:06:46.506 --> 00:06:49.116
and they want to take their
existing data with them.

122
00:06:49.686 --> 00:06:53.726
Now, I'm going to walk
through an example

123
00:06:55.096 --> 00:06:57.886
that shows a little bit more
clearly what the lifetime

124
00:06:57.936 --> 00:06:59.196
of the Vendor Identifier is.

125
00:06:59.896 --> 00:07:02.126
So, in this case we
have two apps, app one

126
00:06:59.896 --> 00:07:02.126
So, in this case we
have two apps, app one

127
00:07:02.126 --> 00:07:03.636
and app two for developer foo.

128
00:07:04.166 --> 00:07:05.746
As you can see, they're
currently mapped

129
00:07:05.746 --> 00:07:08.616
to the same value for
identifier for vendor.

130
00:07:09.476 --> 00:07:11.216
So let's delete app one.

131
00:07:12.006 --> 00:07:15.186
There is no change to
the mapping for app two.

132
00:07:15.426 --> 00:07:18.836
But let's say the user
decides to delete app two.

133
00:07:19.746 --> 00:07:22.066
Now, the value for vendor
identifier is also erased.

134
00:07:23.656 --> 00:07:27.106
If the user decides they
want to reinstall app two,

135
00:07:27.106 --> 00:07:30.896
they like it now, then
a new value is created.

136
00:07:30.896 --> 00:07:34.906
And any further apps for that
developer will now be mapped

137
00:07:35.126 --> 00:07:36.156
to the new value.

138
00:07:40.476 --> 00:07:44.026
The advertising identifier is a
second one of the replacements.

139
00:07:44.886 --> 00:07:46.066
It's used for advertising.

140
00:07:46.066 --> 00:07:49.836
Note, you may not handle the
advertising identifier yourself.

141
00:07:50.596 --> 00:07:53.416
It may be handled by a
third party ad library.

142
00:07:53.896 --> 00:07:58.096
But if you do any advertising
yourself within your app,

143
00:07:58.096 --> 00:08:00.166
you must check the value

144
00:07:58.096 --> 00:08:00.166
you must check the value

145
00:08:01.226 --> 00:08:04.446
of limit ad tracking
before using the

146
00:08:04.576 --> 00:08:05.666
Advertising Identifier.

147
00:08:06.196 --> 00:08:12.306
If the value is set no, you
can only use the Advertising

148
00:08:12.306 --> 00:08:14.826
Identifier for the
reasons outlined

149
00:08:14.826 --> 00:08:16.416
in the Program License
Agreement.

150
00:08:16.726 --> 00:08:19.336
Now, these include things
like frequency capping,

151
00:08:19.636 --> 00:08:21.686
estimating the total
number of unique users.

152
00:08:21.736 --> 00:08:26.286
This value is backed up,

153
00:08:26.756 --> 00:08:29.186
but it will not be
restored across devices.

154
00:08:29.636 --> 00:08:35.426
New in iOS 7, Limit
Ad Tracking is moving

155
00:08:35.426 --> 00:08:36.775
under Settings Privacy.

156
00:08:37.486 --> 00:08:39.586
It can also now be
controlled by restrictions.

157
00:08:39.586 --> 00:08:43.385
And David will talk more
later more about restrictions.

158
00:08:43.746 --> 00:08:48.136
Remember do not cache the
Advertising Identifier

159
00:08:49.196 --> 00:08:52.996
as it can be reset by users
using the Reset button

160
00:08:52.996 --> 00:08:53.806
in advertising.

161
00:08:54.236 --> 00:08:58.456
Now this slide is
a good reference.

162
00:08:58.986 --> 00:09:00.836
If you're trying to understand
what are the differences

163
00:08:58.986 --> 00:09:00.836
If you're trying to understand
what are the differences

164
00:09:00.836 --> 00:09:04.236
between the identifiers, maybe
compare scope or lifetime.

165
00:09:04.456 --> 00:09:07.246
This is a great tool, a
great slide to look at later

166
00:09:07.876 --> 00:09:09.076
to understand more clearly.

167
00:09:10.956 --> 00:09:13.766
So now, I'm going through
a couple other changes

168
00:09:13.766 --> 00:09:15.886
in iOS coming to identifiers.

169
00:09:17.036 --> 00:09:20.006
The first one is
the MAC address.

170
00:09:20.866 --> 00:09:24.426
Access the MAC, the device's MAC
address will now be restricted.

171
00:09:25.346 --> 00:09:30.266
The API is not being
deprecated but sysclt

172
00:09:30.266 --> 00:09:33.186
and ioclt will now
return a consistent value

173
00:09:33.186 --> 00:09:34.636
across all devices.

174
00:09:34.806 --> 00:09:38.616
And this applies
to existing apps.

175
00:09:38.696 --> 00:09:42.006
If you use the MAC address
today, make sure to test

176
00:09:42.006 --> 00:09:45.366
on iOS 7 and understand
the impact to your users.

177
00:09:47.316 --> 00:09:50.516
gethostuuid() is
removed in iOS 7.

178
00:09:51.886 --> 00:09:54.306
Existing apps will receive
the Vendor Identifier.

179
00:09:56.556 --> 00:10:01.196
In iOS 7, push tokens are
now scoped per application.

180
00:09:56.556 --> 00:10:01.196
In iOS 7, push tokens are
now scoped per application.

181
00:10:01.716 --> 00:10:06.306
The Push token was never
guaranteed to be a stable value.

182
00:10:06.306 --> 00:10:09.926
So please, do never,
never cache it.

183
00:10:09.926 --> 00:10:12.396
Always use the value provided
application:didRegisterFor

184
00:10:12.396 --> 00:10:14.956
RemoteNotifications
WithDeviceToken:.

185
00:10:16.026 --> 00:10:23.206
So, the Pasteboard in iOS 7 is
also being scoped per team ID.

186
00:10:23.956 --> 00:10:26.996
There's no change to
existing system Pasteboards.

187
00:10:27.826 --> 00:10:31.096
But also note in iOS
7 any data stored

188
00:10:31.096 --> 00:10:34.016
on the Pasteboard
will be inaccessible

189
00:10:34.016 --> 00:10:39.716
when users upgrades to iOS 7.

190
00:10:39.886 --> 00:10:42.766
Now, I've gone through a
whole bunch different updates

191
00:10:42.766 --> 00:10:43.896
to identifiers and new changes.

192
00:10:44.206 --> 00:10:45.036
But what I want to leave you

193
00:10:45.036 --> 00:10:47.626
with in this section is
make sure to test your apps

194
00:10:47.626 --> 00:10:51.136
on iOS 7 especially
your older apps.

195
00:10:51.136 --> 00:10:53.686
You want to understand the
impact and insure that none

196
00:10:53.686 --> 00:10:55.996
of that impact affects
your users.

197
00:10:56.486 --> 00:10:59.496
Now, I'm going to
pass it over to David

198
00:10:59.496 --> 00:11:01.346
to talk more about
data isolation.

199
00:10:59.496 --> 00:11:01.346
to talk more about
data isolation.

200
00:11:01.776 --> 00:11:02.596
David? [Applause]

201
00:11:03.186 --> 00:11:10.256
>> Okay. Thanks Katie.

202
00:11:10.746 --> 00:11:14.096
So I'm going to take you
guys through data isolation,

203
00:11:14.376 --> 00:11:18.546
what it is and how you
can take advantage of it?

204
00:11:20.446 --> 00:11:23.646
So, just like any
successful peanut butter

205
00:11:23.646 --> 00:11:26.116
and jelly sandwich, there
are two key ingredients,

206
00:11:26.116 --> 00:11:27.186
peanut butter and jelly.

207
00:11:28.246 --> 00:11:33.496
And similarly in any successful
data isolation scheme,

208
00:11:33.976 --> 00:11:38.196
there are two key elements,
consent and transparency.

209
00:11:39.126 --> 00:11:42.016
So, what do I mean by that?

210
00:11:42.326 --> 00:11:46.656
Well, consent is something
that the user is going

211
00:11:47.056 --> 00:11:50.616
to give to your application.

212
00:11:51.446 --> 00:11:53.786
It's usually permission
to do something

213
00:11:53.786 --> 00:11:56.756
such as accessing their
user data classes.

214
00:11:57.156 --> 00:12:00.646
In this particular example,
we see that Camera would

215
00:11:57.156 --> 00:12:00.646
In this particular example,
we see that Camera would

216
00:12:00.646 --> 00:12:02.056
like to access your location

217
00:12:02.096 --> 00:12:04.426
so that it can geotag
photos and videos.

218
00:12:05.876 --> 00:12:09.306
Transparency is the
other key ingredient.

219
00:12:09.976 --> 00:12:12.236
It makes it clear to
the user what is going

220
00:12:12.236 --> 00:12:14.166
to happen with their data.

221
00:12:14.226 --> 00:12:17.916
It helps create clear
mental models for the user

222
00:12:17.916 --> 00:12:20.776
to understand and also
sets expectations.

223
00:12:21.386 --> 00:12:25.276
Here, we can see that there's
a purpose string that explains

224
00:12:25.276 --> 00:12:28.066
that photos and videos will
be tagged with the location

225
00:12:28.066 --> 00:12:30.826
that they were taken,
potentially,

226
00:12:30.826 --> 00:12:35.586
so that we can display
them on a map perhaps.

227
00:12:35.966 --> 00:12:38.446
So you should be thinking
about both these concepts--

228
00:12:38.446 --> 00:12:39.956
transparency and consent

229
00:12:40.196 --> 00:12:42.016
when you're designing
your applications.

230
00:12:42.916 --> 00:12:45.396
Now, we've made this easy
and consistent for you

231
00:12:45.396 --> 00:12:47.856
by building it in to
the operating system.

232
00:12:48.416 --> 00:12:51.676
So, those of you who are not
familiar with data isolation,

233
00:12:51.966 --> 00:12:55.726
it's a technical design where by
the operating system intervenes

234
00:12:55.896 --> 00:12:59.276
between an application
and the user's data

235
00:12:59.436 --> 00:13:00.636
on behalf of the user.

236
00:12:59.436 --> 00:13:00.636
on behalf of the user.

237
00:13:02.416 --> 00:13:05.246
While this intervention
happens completely outside

238
00:13:05.246 --> 00:13:07.226
of the address space
of your process,

239
00:13:08.216 --> 00:13:10.986
it's completely transparent
to your application.

240
00:13:12.576 --> 00:13:17.796
So, if the user decides to allow
you access their user data then

241
00:13:17.796 --> 00:13:18.976
you will receive data back.

242
00:13:18.976 --> 00:13:22.026
And if a user declines
to allow you access,

243
00:13:22.026 --> 00:13:24.036
then you won't receive
any data back.

244
00:13:25.536 --> 00:13:28.776
So, this screen should look
somewhat familiar to you.

245
00:13:29.436 --> 00:13:33.226
This is how you manage your data
isolation on both iOS and OS X.

246
00:13:33.226 --> 00:13:37.586
And you get there on iOS by
going to Settings Privacy

247
00:13:37.686 --> 00:13:40.136
and then choosing the category
that you want to manage

248
00:13:40.916 --> 00:13:43.686
and on OS X on System
Preferences and going

249
00:13:43.686 --> 00:13:47.616
to Security and Privacy.

250
00:13:48.426 --> 00:13:52.656
So, there's a number of classes
that we support already on OS X

251
00:13:52.656 --> 00:13:55.476
and we're adding some new
support in OS X Mavericks.

252
00:13:56.716 --> 00:13:59.536
In Mountain Lion we supported
Contacts and Location

253
00:13:59.536 --> 00:14:03.116
and in Mavericks we're adding
Calendars and Reminders.

254
00:13:59.536 --> 00:14:03.116
and in Mavericks we're adding
Calendars and Reminders.

255
00:14:03.796 --> 00:14:09.856
On the social side of things
for OS X, we're adding support

256
00:14:09.856 --> 00:14:12.156
for LinkedIn and Tencent Weibo.

257
00:14:12.156 --> 00:14:14.546
And for those of you who are
not familiar with Tencent Weibo,

258
00:14:14.816 --> 00:14:20.396
it's a microblogging
service in China.

259
00:14:21.596 --> 00:14:24.996
We support all of the same
data classes that we do on OS X

260
00:14:24.996 --> 00:14:30.626
with the addition of some such
as Photos and Bluetooth on iOS.

261
00:14:31.896 --> 00:14:36.516
And in iOS 7 we're going to be
adding two new data classes,

262
00:14:36.736 --> 00:14:39.826
Microphone and Camera
in some regions only.

263
00:14:39.876 --> 00:14:44.096
And for the social
side of things in iOS,

264
00:14:44.446 --> 00:14:48.336
we support all the same classes
as OS X, Facebook, Twitter,

265
00:14:48.636 --> 00:14:54.136
Sina Weibo, and we're adding
support for Tencent Weibo.

266
00:14:54.796 --> 00:14:58.666
So, you're already shipping on
either Mountain Lion or iOS 6,

267
00:14:58.946 --> 00:15:01.196
that's great, congratulations.

268
00:14:58.946 --> 00:15:01.196
that's great, congratulations.

269
00:15:01.886 --> 00:15:04.686
You're already taking
advantage of data isolation.

270
00:15:05.696 --> 00:15:09.606
So, as before on iOS 6, this
data isolation will apply

271
00:15:09.606 --> 00:15:13.066
to all existing applications,
there's absolutely no need

272
00:15:13.066 --> 00:15:16.736
to recompile or resubmit your
application to the App Store.

273
00:15:17.056 --> 00:15:17.986
You're going to be ready

274
00:15:17.986 --> 00:15:21.246
from a data isolation
perspective on day one.

275
00:15:22.726 --> 00:15:25.326
However, there are certain
changes you can make

276
00:15:25.326 --> 00:15:26.936
to improve the user experience.

277
00:15:27.496 --> 00:15:30.716
For example, you can add purpose
strings to your application

278
00:15:30.716 --> 00:15:33.626
which we'll talk about
later to make it clear

279
00:15:33.626 --> 00:15:37.076
to the user why you want
to access their user data.

280
00:15:37.726 --> 00:15:41.926
Also, you can design a robust
fallback behavior in the case

281
00:15:41.926 --> 00:15:44.826
that the user declines
to give you access

282
00:15:45.076 --> 00:15:46.116
to their personal data.

283
00:15:47.516 --> 00:15:52.996
So, let's talk about
privacy support in OS X.

284
00:15:53.236 --> 00:15:57.606
It's really easy to get consent
from the user and all you have

285
00:15:57.606 --> 00:15:59.676
to do is call the
purpose-specific APIs

286
00:15:59.676 --> 00:16:01.286
that have been provided to you.

287
00:15:59.676 --> 00:16:01.286
that have been provided to you.

288
00:16:02.046 --> 00:16:05.906
Now, as I said before you should
already been getting consent

289
00:16:06.326 --> 00:16:07.156
from your user.

290
00:16:07.536 --> 00:16:11.666
We've just made this easier and
consistent for you as an aid

291
00:16:11.666 --> 00:16:14.416
to you by building it
into the operating system.

292
00:16:15.376 --> 00:16:20.586
Now, note that calls on
OS X are synchronous.

293
00:16:21.066 --> 00:16:22.686
So, you're going to
want to wrap them

294
00:16:22.686 --> 00:16:26.956
in a dispatch block using GCD
or put them in NSOperation

295
00:16:26.956 --> 00:16:30.536
to keep UI responsive so
that you can update the user.

296
00:16:31.616 --> 00:16:34.266
Note that after the user
makes their initial choice,

297
00:16:34.636 --> 00:16:36.916
all of the calls will
return immediately

298
00:16:37.116 --> 00:16:38.676
because there's no
reason to block.

299
00:16:38.846 --> 00:16:41.686
The user's already made
their decision as far

300
00:16:41.686 --> 00:16:43.706
as what they want to
allow you to access.

301
00:16:44.336 --> 00:16:49.986
As I said before, if the user
wants to grant you access

302
00:16:49.986 --> 00:16:52.286
to the particular data
category, then you're going

303
00:16:52.286 --> 00:16:53.966
to receive a populated
object back.

304
00:16:53.966 --> 00:16:57.046
If the user decides
to not allow access

305
00:16:57.046 --> 00:16:59.726
to a particular data category,
then you're either going

306
00:16:59.726 --> 00:17:03.036
to get a nil value back
or an empty object.

307
00:16:59.726 --> 00:17:03.036
to get a nil value back
or an empty object.

308
00:17:05.076 --> 00:17:08.756
And for applications that
access systems services

309
00:17:08.756 --> 00:17:13.036
such as AppleScript or
Spotlight to get to user data,

310
00:17:13.455 --> 00:17:16.876
then the operating system will
prompt on behalf of the user

311
00:17:17.386 --> 00:17:24.756
when your application
uses those services.

312
00:17:24.756 --> 00:17:26.326
[ Pause ]

313
00:17:26.326 --> 00:17:30.676
On OS X, applications can
participate in the App Sandbox.

314
00:17:30.676 --> 00:17:34.116
And if you're shipping on the
Mac App Store, you're required

315
00:17:34.116 --> 00:17:36.626
to participate in
the Apps Sandbox.

316
00:17:37.356 --> 00:17:39.196
So, for those of you
who are unfamiliar

317
00:17:39.196 --> 00:17:42.696
with what the App Sandbox
is, is a security design

318
00:17:42.876 --> 00:17:45.906
that isolates your process
from other processes

319
00:17:46.166 --> 00:17:47.476
and the operating system.

320
00:17:48.026 --> 00:17:51.066
Typically, this Sandbox
processes have a tight set

321
00:17:51.066 --> 00:17:54.496
of restrictions on the set of
resources that they can access.

322
00:17:55.126 --> 00:18:00.006
For example, if the address book
is initially outside the Sandbox

323
00:17:55.126 --> 00:18:00.006
For example, if the address book
is initially outside the Sandbox

324
00:18:00.046 --> 00:18:04.276
for your process then you
won't be able to access it.

325
00:18:04.466 --> 00:18:06.596
So, if you're going to
ship on the Mac App Store,

326
00:18:07.076 --> 00:18:09.366
there's an additional set of
things that you're going to have

327
00:18:09.366 --> 00:18:12.526
to do to get these
consent dialogs to show up.

328
00:18:12.526 --> 00:18:15.676
And we'll talk about that in
a second that all you have

329
00:18:15.676 --> 00:18:18.316
to do is add entitlements
to your application.

330
00:18:18.316 --> 00:18:23.096
Now, if the permission set ever
changes for your application,

331
00:18:23.496 --> 00:18:27.546
you'll be notified and the
OS may kill your application.

332
00:18:28.036 --> 00:18:31.916
Now, the reason I say, "May", is
because it's the user's choice.

333
00:18:31.956 --> 00:18:34.816
They can either decide to kill
the application immediately

334
00:18:35.576 --> 00:18:37.356
or they can wait
until a later point.

335
00:18:37.906 --> 00:18:40.336
This is to keep the
App Sandbox consistent

336
00:18:40.966 --> 00:18:44.516
with the user's desires for
what in-application can access

337
00:18:44.516 --> 00:18:45.756
as far as their user data.

338
00:18:46.466 --> 00:18:50.916
So, the last point
I want to make is

339
00:18:50.916 --> 00:18:53.566
that you should only build
with the entitlements

340
00:18:53.566 --> 00:18:54.906
that you absolutely need.

341
00:18:55.166 --> 00:18:57.466
This goes to least privilege.

342
00:18:57.466 --> 00:19:00.196
You shouldn't be collecting
data or accessing data

343
00:18:57.466 --> 00:19:00.196
You shouldn't be collecting
data or accessing data

344
00:19:00.196 --> 00:19:02.886
that you don't truly need.

345
00:19:05.016 --> 00:19:08.146
So, as I said before,
it's very easy

346
00:19:08.206 --> 00:19:10.126
to add entitlements on OS X.

347
00:19:10.896 --> 00:19:15.556
All you have to do is select
the target, go to capabilities,

348
00:19:15.556 --> 00:19:18.096
and turn the App Sandbox on.

349
00:19:18.146 --> 00:19:21.456
And then from there, you
can add the categories

350
00:19:21.506 --> 00:19:22.476
that you want to access.

351
00:19:22.606 --> 00:19:25.336
This particular example is
accessing Contacts and Calendar.

352
00:19:26.096 --> 00:19:29.596
Now really, the UI for
this is simply a front-end

353
00:19:30.146 --> 00:19:32.106
for editing the
entitlements.plist.

354
00:19:32.376 --> 00:19:36.186
So, if you want to not use
the UI, you can always choose

355
00:19:36.186 --> 00:19:39.076
to edit the plist
manually if you desire.

356
00:19:40.116 --> 00:19:41.746
You can find more
information about this

357
00:19:42.056 --> 00:19:43.146
on the Developer Center.

358
00:19:43.786 --> 00:19:53.926
So now that we've talked about
OS X, let's talk about iOS.

359
00:19:54.616 --> 00:19:56.326
So there are numbers
of similarities

360
00:19:56.326 --> 00:20:00.716
and a few differences
on iOS from OS X.

361
00:19:56.326 --> 00:20:00.716
and a few differences
on iOS from OS X.

362
00:20:01.086 --> 00:20:05.306
On iOS, applications are built
on top of the App Sandbox.

363
00:20:05.836 --> 00:20:08.816
So therefore, participation
in it is obligatory

364
00:20:09.356 --> 00:20:13.776
and you do not need to add
entitlements as you did on OS X.

365
00:20:14.616 --> 00:20:20.776
However, unlike OS X, if the
permission set ever changes,

366
00:20:21.436 --> 00:20:24.746
then the OS will immediately
kill your application,

367
00:20:24.746 --> 00:20:25.836
there is no choice.

368
00:20:27.136 --> 00:20:33.066
Also access to these APIs
are asynchronous on iOS

369
00:20:33.336 --> 00:20:35.796
so the consent dialog will
be presented to the user,

370
00:20:36.486 --> 00:20:38.476
and then synchronously return

371
00:20:38.806 --> 00:20:40.476
and the permission
will come later

372
00:20:40.916 --> 00:20:42.796
and data is usually returned

373
00:20:42.796 --> 00:20:46.456
to either a delegate
or a block method.

374
00:20:46.766 --> 00:20:51.366
On iOS, you can register for
Background Change Notifications.

375
00:20:51.956 --> 00:20:54.616
And before the OS
kills your application,

376
00:20:54.686 --> 00:20:56.946
it will call these
change notifications

377
00:20:57.796 --> 00:21:00.876
and you can handle the
change appropriately.

378
00:20:57.796 --> 00:21:00.876
and you can handle the
change appropriately.

379
00:21:01.346 --> 00:21:03.546
And honestly, this
was a good idea anyway

380
00:21:03.546 --> 00:21:07.806
because when you're working with
user data that sync with iCloud

381
00:21:07.806 --> 00:21:10.066
such as Contacts,
Calendars, Remainders,

382
00:21:10.366 --> 00:21:12.486
that data can be shifting
out from underneath you

383
00:21:12.486 --> 00:21:15.666
as the user could potentially
change them on other devices.

384
00:21:16.006 --> 00:21:18.756
So, it's always good to register
for those change notifications.

385
00:21:19.326 --> 00:21:21.906
So, there are number

386
00:21:21.906 --> 00:21:25.996
of different ways you can
present these consent dialogs

387
00:21:26.136 --> 00:21:26.786
to the user.

388
00:21:27.796 --> 00:21:34.166
Both of these are
applicable on iOS and OS X.

389
00:21:35.166 --> 00:21:38.306
For CLLocationManager, we can
simply trigger the Consent Alert

390
00:21:38.346 --> 00:21:41.016
by calling
startUpdatingLocation.

391
00:21:42.836 --> 00:21:47.886
Differently, we can trigger
Consent Alert for EKEventStore

392
00:21:48.586 --> 00:21:51.956
by calling requestAccessTo
EntityType:completion.

393
00:21:55.636 --> 00:21:58.046
I've highlighted
these APIs in yellow

394
00:21:58.046 --> 00:22:00.346
because they represent
the difference

395
00:21:58.046 --> 00:22:00.346
because they represent
the difference

396
00:22:00.436 --> 00:22:02.856
between iOS 6 and iOS 7.

397
00:22:03.916 --> 00:22:05.626
You can find this
later on either

398
00:22:05.626 --> 00:22:10.066
on the Dev Center
or on the slide.

399
00:22:10.616 --> 00:22:13.266
So, now that we've talked
about all the different APIs,

400
00:22:13.266 --> 00:22:17.196
let's actually take
you through some codes

401
00:22:17.196 --> 00:22:19.986
since that's what you guys
build your business off of.

402
00:22:19.986 --> 00:22:25.716
So we can see that access to
AVAudioSession is now managed

403
00:22:25.716 --> 00:22:29.566
by the OS and all we have

404
00:22:29.566 --> 00:22:32.766
to do is alloc init a
particular AV audio session.

405
00:22:32.946 --> 00:22:35.816
And when we set the
category of the audio session

406
00:22:36.126 --> 00:22:39.256
that is what's going to
present the dialog to the user.

407
00:22:39.856 --> 00:22:41.936
The two categories
they're going to present,

408
00:22:42.576 --> 00:22:46.306
the dialog to the user, are
AVAudioSessionCategoryRecord

409
00:22:47.246 --> 00:22:50.306
and AVAudioSession
CategoryPlayAndRecord.

410
00:22:50.306 --> 00:22:54.526
Now, if the user declines
to give you access to this,

411
00:22:55.046 --> 00:22:58.106
then your audio stream is going
to be filled with all zeros

412
00:22:58.106 --> 00:23:02.196
or essentially silence.

413
00:22:58.106 --> 00:23:02.196
or essentially silence.

414
00:23:02.706 --> 00:23:06.486
Another way to trigger the
consent dialog is calling

415
00:23:06.486 --> 00:23:08.826
requestRecordPermission:.

416
00:23:09.846 --> 00:23:12.846
This will allow you
to request consent

417
00:23:13.316 --> 00:23:14.906
from the user ahead of time.

418
00:23:15.396 --> 00:23:19.036
Now, I've shown you two very
different ways attributed

419
00:23:19.036 --> 00:23:20.056
in a consent dialog.

420
00:23:20.056 --> 00:23:21.066
What's the difference?

421
00:23:21.956 --> 00:23:24.066
Well, consider VoIP application.

422
00:23:24.916 --> 00:23:27.076
The wrong time to be
prompting the user

423
00:23:27.076 --> 00:23:28.896
for consent is the first time

424
00:23:28.896 --> 00:23:31.286
that application is
making an outgoing call

425
00:23:31.286 --> 00:23:32.676
or having an incoming call.

426
00:23:32.676 --> 00:23:36.116
The user doesn't want to have to
deal with consent at that point

427
00:23:36.246 --> 00:23:39.286
so you may wish to request
permission from the user ahead

428
00:23:39.286 --> 00:23:41.736
of time using
requestRecordPermission:.

429
00:23:42.756 --> 00:23:45.866
Some apps may like the Set
Category Method better.

430
00:23:46.126 --> 00:23:51.216
I wanted to make a quick
point about routing

431
00:23:51.336 --> 00:23:55.556
because all routes lead to the
microphone and consent dialogs.

432
00:23:56.496 --> 00:23:59.056
So, for those of you
who are interfacing

433
00:23:59.056 --> 00:24:03.836
with external hardware, then
all of the different routes

434
00:23:59.056 --> 00:24:03.836
with external hardware, then
all of the different routes

435
00:24:03.836 --> 00:24:06.956
that you can interface with
such as the headphones,

436
00:24:07.556 --> 00:24:11.826
the internal mic, and
the lightning connector

437
00:24:11.826 --> 00:24:15.926
and even Bluetooth are going
to trigger that consent dialog.

438
00:24:15.926 --> 00:24:16.616
[ Pause ]

439
00:24:16.616 --> 00:24:24.726
In addition, we've added
support for Tencent Weibo.

440
00:24:25.156 --> 00:24:26.366
So, all we're going to have

441
00:24:26.366 --> 00:24:28.876
to do is alloc init
in account store.

442
00:24:28.876 --> 00:24:31.936
And then we're going
to request access

443
00:24:31.936 --> 00:24:33.466
to the Tencent Weibo account

444
00:24:34.966 --> 00:24:37.716
by calling requestAccessTo
AccountWithType:.

445
00:24:38.986 --> 00:24:43.326
And then the access level will
be returned in a block and the--

446
00:24:43.586 --> 00:24:46.836
we will grant it and even you
can handle either accessing the

447
00:24:46.836 --> 00:24:49.356
account or displaying
a failure to the user.

448
00:24:50.026 --> 00:24:55.386
Note that all ACAccountType's
support the accessGranted:

449
00:24:55.386 --> 00:24:58.896
selector so that you can
test your access levels

450
00:24:59.136 --> 00:25:02.606
and display UI to the user
before you request access.

451
00:24:59.136 --> 00:25:02.606
and display UI to the user
before you request access.

452
00:25:06.536 --> 00:25:07.976
So how do we test all this?

453
00:25:07.976 --> 00:25:09.686
It's a lot of information.

454
00:25:10.066 --> 00:25:12.016
Well, it's really
easy to test it.

455
00:25:12.016 --> 00:25:14.636
All you have to do is run
your app, pretty easy, huh?

456
00:25:16.086 --> 00:25:20.276
Note that there's no data
isolation currently supported

457
00:25:20.426 --> 00:25:22.676
on the simulator,
however, it is coming

458
00:25:22.956 --> 00:25:24.716
in a future seed of iOS 7.

459
00:25:25.266 --> 00:25:27.936
So, until then, you need
to test on your device.

460
00:25:28.836 --> 00:25:31.976
Note that you can only trigger
the Consent Prompt one time

461
00:25:32.806 --> 00:25:36.626
so if you need to go back and
test this again, you either need

462
00:25:36.626 --> 00:25:40.456
to go to-- on iOS, you need to
go to Settings, General Reset,

463
00:25:40.516 --> 00:25:44.796
Reset Location in Privacy
or in OS X use tccutil

464
00:25:44.796 --> 00:25:47.866
from the command line to reset
that particular data class.

465
00:25:48.716 --> 00:25:51.716
You can also toggle
the switches yourself

466
00:25:51.946 --> 00:25:56.406
to test how your application
will respond in Settings,

467
00:25:56.746 --> 00:26:01.386
Privacy on iOS and
System Preferences,

468
00:25:56.746 --> 00:26:01.386
Privacy on iOS and
System Preferences,

469
00:26:01.386 --> 00:26:02.556
Security and Privacy.

470
00:26:03.566 --> 00:26:05.626
That you should consider all

471
00:26:05.626 --> 00:26:08.496
of the possible test cases
maybe even build them

472
00:26:08.496 --> 00:26:11.636
into your test suite so you
don't ship any regressions.

473
00:26:12.056 --> 00:26:14.056
There are four different
test cases.

474
00:26:14.566 --> 00:26:17.026
The first one is Permission
Being Sought and Denied.

475
00:26:18.066 --> 00:26:20.236
The second is Permission
Being Sought and Granted.

476
00:26:21.776 --> 00:26:23.746
Third is Permission
Previously Denied.

477
00:26:24.466 --> 00:26:26.106
And the last one is
Permission Restricted.

478
00:26:26.106 --> 00:26:29.226
Now, Permission Restricted
is unique and we'll talk

479
00:26:29.226 --> 00:26:33.266
about that in a second.

480
00:26:33.376 --> 00:26:36.176
So up until this point,
we've been fairly optimistic

481
00:26:36.176 --> 00:26:39.986
and assumed that user will grant
you access to their user data.

482
00:26:40.586 --> 00:26:44.576
That's not always the case and
you should be prepared for that.

483
00:26:44.836 --> 00:26:47.246
So, in some cases such as

484
00:26:47.246 --> 00:26:49.766
when you're using the
UIImagePickerController

485
00:26:50.146 --> 00:26:53.366
or the AddressBook Picker, the
OS will actually help you out

486
00:26:53.366 --> 00:26:56.326
and display a lock page
to the user to remind them

487
00:26:56.636 --> 00:26:58.476
that they have previous
revoked access

488
00:26:58.476 --> 00:26:59.906
to that particular data class.

489
00:27:01.186 --> 00:27:03.316
However, just because
the OS can help you out,

490
00:27:03.316 --> 00:27:04.976
it doesn't mean you
should rely on it

491
00:27:05.126 --> 00:27:06.786
for all the different cases.

492
00:27:07.366 --> 00:27:09.556
You should design a
rich fallback behavior.

493
00:27:09.556 --> 00:27:12.536
Try and keep the user
engaged as much as possible.

494
00:27:12.866 --> 00:27:17.696
Your code should be resilient
to the lack of data returned.

495
00:27:19.186 --> 00:27:21.086
One note I want to
make about this is

496
00:27:21.086 --> 00:27:23.336
that restrictions can
actually prevent users

497
00:27:23.336 --> 00:27:24.956
from changing their
Privacy Settings.

498
00:27:25.306 --> 00:27:28.276
They may actually be
unable to give you access.

499
00:27:28.556 --> 00:27:32.866
So, your fallback behavior
should not be a dialog

500
00:27:32.866 --> 00:27:37.526
that says, "Go flip the switch"
because they won't be able to.

501
00:27:38.636 --> 00:27:41.646
An example of these
restrictions includes enterprise

502
00:27:41.646 --> 00:27:44.866
configuration profiles, as
well as on-device restrictions.

503
00:27:45.446 --> 00:27:49.476
So, it's really easy to test
your code with restrictions.

504
00:27:49.826 --> 00:27:52.656
All you have to do is go to
Settings, General Restrictions

505
00:27:52.726 --> 00:27:55.716
on iOS and from there you
can set up the restrictions

506
00:27:55.936 --> 00:28:01.816
and whatever you'd like to test.

507
00:27:55.936 --> 00:28:01.816
and whatever you'd like to test.

508
00:28:01.856 --> 00:28:05.166
So now that we've talked about
what data isolation, what it is?

509
00:28:05.166 --> 00:28:06.326
How to take advantage of it?

510
00:28:06.616 --> 00:28:08.626
And what's new on iOS and OS X?

511
00:28:09.156 --> 00:28:12.086
Let's talk about how we
convey purpose to the user.

512
00:28:12.086 --> 00:28:12.806
[ Pause ]

513
00:28:12.806 --> 00:28:19.536
So, there are two points
that I want to make.

514
00:28:21.046 --> 00:28:25.236
The first is that we
call these dialogs,

515
00:28:25.296 --> 00:28:27.976
these consent alerts
just-in-time alerts.

516
00:28:29.076 --> 00:28:31.706
This is a key differentiating
feature of our platform

517
00:28:31.746 --> 00:28:33.876
and we believe that
we're truly better

518
00:28:33.876 --> 00:28:35.486
at this than other platforms.

519
00:28:36.296 --> 00:28:38.886
These consent alerts are
only shown to the user

520
00:28:38.886 --> 00:28:44.336
at the exact time when the data
access is occurring not before.

521
00:28:45.546 --> 00:28:49.366
This helps to clarify the
"when" in the user's mind.

522
00:28:50.476 --> 00:28:51.806
It's the least intrusive.

523
00:28:52.536 --> 00:28:56.116
I'm sure we've all
used the applications

524
00:28:56.466 --> 00:28:58.786
that presented a
conga line of alerts

525
00:28:58.786 --> 00:29:00.336
when you start up
the application.

526
00:28:58.786 --> 00:29:00.336
when you start up
the application.

527
00:29:01.106 --> 00:29:05.316
So consider your user interface
and you should delay asking

528
00:29:05.316 --> 00:29:08.236
for the user's permission,
as long as, possible.

529
00:29:08.896 --> 00:29:12.636
The second point that I
want to make about this is

530
00:29:13.086 --> 00:29:16.246
that you should only be
asking the user for permission

531
00:29:16.246 --> 00:29:18.926
to access the data classes
that you truly need.

532
00:29:19.796 --> 00:29:21.446
If the user is confused

533
00:29:21.446 --> 00:29:24.916
about why a particular
application needs to access

534
00:29:25.066 --> 00:29:28.646
to a particular data class, then
they're more likely to question,

535
00:29:28.646 --> 00:29:30.876
"Well, why does this
application need that,"

536
00:29:30.876 --> 00:29:37.556
and potentially disengaged with
your applications as Katie said.

537
00:29:37.626 --> 00:29:42.376
So to help you answer the, "Why
an application needs access

538
00:29:42.376 --> 00:29:43.646
to a particular data class?"

539
00:29:44.096 --> 00:29:47.866
We've given you a dedicated
space to tell the users.

540
00:29:48.496 --> 00:29:52.776
Consider this your value
proposition of telling the user,

541
00:29:53.346 --> 00:29:56.576
how allowing you access

542
00:29:56.636 --> 00:29:59.596
to the particular data category
will enhance their experience.

543
00:30:00.546 --> 00:30:04.416
For example, in this particular
slide, we see that Camera would

544
00:30:04.416 --> 00:30:07.876
like to access location so that
we can geotag photos and videos

545
00:30:08.186 --> 00:30:09.246
with the current location,

546
00:30:09.246 --> 00:30:12.116
perhaps to display
it on the map.

547
00:30:12.816 --> 00:30:17.826
Also, for Aperture, we
can see that it wants

548
00:30:17.826 --> 00:30:21.686
to access our Contacts so that
as we're using the Faces feature

549
00:30:21.686 --> 00:30:28.046
in Aperture, it can suggest
contacts that we know.

550
00:30:28.596 --> 00:30:32.676
So, each consent dialog
supports purpose strings.

551
00:30:34.266 --> 00:30:37.686
However, you can only have one
purpose string per data class.

552
00:30:38.746 --> 00:30:40.066
Now, you guys are
going to be coming

553
00:30:40.066 --> 00:30:42.616
up with the purpose
strings and they're optional

554
00:30:42.616 --> 00:30:44.726
but they're highly recommended

555
00:30:44.726 --> 00:30:46.986
because it makes it
extremely transparent

556
00:30:46.986 --> 00:30:50.986
to the user why you want to
access a particular data class.

557
00:30:52.236 --> 00:30:54.586
For those of you who are
shipping internationally,

558
00:30:55.016 --> 00:30:57.956
you can localize your purpose
strings for your native users

559
00:30:58.306 --> 00:31:01.466
by simply putting the purpose
string in localizable.strings.

560
00:30:58.306 --> 00:31:01.466
by simply putting the purpose
string in localizable.strings.

561
00:31:02.666 --> 00:31:05.146
And to add this purpose
strings, it couldn't be easier.

562
00:31:05.646 --> 00:31:10.226
All you have to do is use Xcode
and edit the Info.plist and look

563
00:31:10.226 --> 00:31:15.366
for the "Privacy -" whatever
data class you want to access.

564
00:31:15.426 --> 00:31:17.326
So, we can see here,
I have an application,

565
00:31:18.126 --> 00:31:20.746
Restaurant application,
and we're telling the user

566
00:31:20.746 --> 00:31:22.456
that we want to access
their Calendars

567
00:31:22.456 --> 00:31:24.786
so that we can put their
restaurant reservations

568
00:31:24.786 --> 00:31:25.256
on there.

569
00:31:25.256 --> 00:31:26.726
We want to access
their contacts.

570
00:31:26.726 --> 00:31:29.676
We can automatically add
their name to the reservation.

571
00:31:29.826 --> 00:31:31.146
We want to access their photos

572
00:31:31.146 --> 00:31:33.636
so they can upload all
those great pictures of food

573
00:31:33.636 --> 00:31:36.136
that they ate after they
complete the reservation.

574
00:31:36.136 --> 00:31:41.966
And note that just like
before with the Entitlements,

575
00:31:42.236 --> 00:31:46.786
the Xcode UI is simply a
front-end for the info.plist.

576
00:31:46.786 --> 00:31:48.076
So, you could always edit

577
00:31:48.076 --> 00:31:50.666
that info.plist manually
if you so choose.

578
00:31:52.336 --> 00:31:56.286
Here are all the different
purpose string keys

579
00:31:56.286 --> 00:31:56.996
that we support.

580
00:31:57.376 --> 00:31:59.076
Some of these are iOS only.

581
00:31:59.516 --> 00:32:00.996
So, make sure you pay
attention to that.

582
00:31:59.516 --> 00:32:00.996
So, make sure you pay
attention to that.

583
00:32:01.926 --> 00:32:04.856
You can always find this
information again in the slides

584
00:32:05.546 --> 00:32:08.496
or on the Dev Center
after this talk.

585
00:32:09.276 --> 00:32:14.266
We have some great sample
code out there for iOS.

586
00:32:15.486 --> 00:32:19.436
It's available today and you can
find it on the Developer Center,

587
00:32:19.436 --> 00:32:21.946
just search for PrivacyPrompts
Project

588
00:32:22.926 --> 00:32:25.306
or you could find the link
in the related materials

589
00:32:25.306 --> 00:32:26.266
at the end of this talk.

590
00:32:27.306 --> 00:32:30.976
Use it in your app, go ahead,
or just experiment see with--

591
00:32:31.226 --> 00:32:35.046
to see what it happens and
how you use data isolation.

592
00:32:38.156 --> 00:32:42.066
So, there are some key points
that I want to live you

593
00:32:42.066 --> 00:32:43.446
at before Katie comes back.

594
00:32:44.266 --> 00:32:48.686
The first thing is, build
privacy into your application.

595
00:32:49.276 --> 00:32:51.516
Spend as much time
thinking about privacy

596
00:32:52.036 --> 00:32:56.296
as you do other aspects of
your application such as colors

597
00:32:56.296 --> 00:32:59.346
or what animations you're going
to be presenting to the user.

598
00:32:59.886 --> 00:33:01.516
Start today.

599
00:32:59.886 --> 00:33:01.516
Start today.

600
00:33:01.966 --> 00:33:06.236
After this talk, spend one
hour adjusting your application

601
00:33:06.496 --> 00:33:07.916
to use purpose strings.

602
00:33:08.406 --> 00:33:09.756
In fact, we're having a lab.

603
00:33:09.756 --> 00:33:11.716
Right after this talk at 10:15,

604
00:33:11.986 --> 00:33:14.726
down in Core OS,
Lab A, come to it.

605
00:33:15.766 --> 00:33:16.516
We'll help you out.

606
00:33:16.516 --> 00:33:17.816
We'll answer your questions.

607
00:33:17.816 --> 00:33:23.166
There are three new data
categories for data isolation

608
00:33:23.596 --> 00:33:27.756
on iOS on OS X, Microphone,
Tencent Weibo,

609
00:33:27.756 --> 00:33:30.266
and Camera in some reasons only.

610
00:33:31.736 --> 00:33:33.816
Note that data isolation
applies to all

611
00:33:33.816 --> 00:33:36.566
of Apple's platforms
both iOS in OS X.

612
00:33:36.906 --> 00:33:40.616
have you-- if you're shipping
in the Mac App Store for OS X,

613
00:33:40.896 --> 00:33:42.996
there's additional work that
you're going to have to do

614
00:33:42.996 --> 00:33:45.756
to get those consent
dialogs to show up.

615
00:33:46.306 --> 00:33:48.746
And remember that purpose
strings are your friends.

616
00:33:49.316 --> 00:33:51.616
They help explain
the value proposition

617
00:33:51.616 --> 00:33:55.116
to the user making them
more likely to engage

618
00:33:55.116 --> 00:33:55.996
with your application.

619
00:33:55.996 --> 00:34:00.476
And then lastly, make sure you
understand all the implications

620
00:33:55.996 --> 00:34:00.476
And then lastly, make sure you
understand all the implications

621
00:34:00.476 --> 00:34:03.216
of data isolation
on iOS 7, OS X.

622
00:34:03.566 --> 00:34:05.186
So, test your app thoroughly.

623
00:34:06.156 --> 00:34:08.706
So, with that, I'm going to give
it back to Katie to take you

624
00:34:08.706 --> 00:34:10.476
through some privacy
best practices.

625
00:34:10.476 --> 00:34:11.246
[Applause]

626
00:34:11.246 --> 00:34:15.996
>> Thanks David.

627
00:34:16.516 --> 00:34:19.016
So, now we're going
to finish off talking

628
00:34:19.016 --> 00:34:22.366
about some privacy best
practices that you can apply

629
00:34:22.366 --> 00:34:24.396
to help maintain
trust with your users.

630
00:34:24.666 --> 00:34:28.775
We're going to touch on
transparency, control,

631
00:34:28.775 --> 00:34:32.346
talk about and walkthrough
examples

632
00:34:32.346 --> 00:34:35.206
for applying data
collection techniques.

633
00:34:36.295 --> 00:34:40.966
Talk about fingerprinting and
the built-in tools you can use

634
00:34:41.016 --> 00:34:42.045
to apply data protection.

635
00:34:42.045 --> 00:34:45.576
So, we're going to
start with transparency.

636
00:34:45.576 --> 00:34:46.156
What is that?

637
00:34:46.585 --> 00:34:48.096
Transparency is being clear

638
00:34:48.096 --> 00:34:51.106
to your users what is actually
going on, what's happening.

639
00:34:52.216 --> 00:34:55.916
One way that you can do this is

640
00:34:56.136 --> 00:34:59.656
if you collect data then
show that to your users.

641
00:34:59.686 --> 00:35:02.256
Allow them a way to
examine what the data is.

642
00:34:59.686 --> 00:35:02.256
Allow them a way to
examine what the data is.

643
00:35:02.656 --> 00:35:07.206
Your privacy policy is another
great way to be transparent

644
00:35:07.206 --> 00:35:09.576
and privacy policies
are very important.

645
00:35:09.856 --> 00:35:13.006
Your privacy policy should
include what data you plan

646
00:35:13.006 --> 00:35:18.436
to collect, what you plan to do
with that data, and if you plan

647
00:35:18.436 --> 00:35:19.826
to share with any third parties.

648
00:35:21.246 --> 00:35:24.816
We make it easy to make your
privacy policy available

649
00:35:24.816 --> 00:35:25.426
for users.

650
00:35:25.836 --> 00:35:28.766
You can submit your
link in iTunes Connect

651
00:35:28.876 --> 00:35:31.336
and then it will
automatically show up across all

652
00:35:31.336 --> 00:35:32.476
of the App Store clients.

653
00:35:33.976 --> 00:35:36.876
So, here is iTunes Connect

654
00:35:36.876 --> 00:35:41.516
and you can enter your
URL right underneath the

655
00:35:41.516 --> 00:35:43.706
description section.

656
00:35:46.756 --> 00:35:49.396
Then, automatically it'll show

657
00:35:49.396 --> 00:35:53.396
up across all App Store
clients on the Details pane.

658
00:35:53.846 --> 00:35:58.916
So, David talked a lot about
control and there's two pieces

659
00:35:58.916 --> 00:36:00.296
that I just want to
quickly highlight.

660
00:35:58.916 --> 00:36:00.296
that I just want to
quickly highlight.

661
00:36:00.926 --> 00:36:05.036
When you're asking for
permission do it in context

662
00:36:06.296 --> 00:36:08.446
and do it at the
time you need it.

663
00:36:09.026 --> 00:36:11.636
This is the best way to drive
engagement with your users,

664
00:36:11.636 --> 00:36:13.446
when they clearly
understand what's happening

665
00:36:14.146 --> 00:36:15.186
and they feel in control.

666
00:36:15.656 --> 00:36:21.776
So, data collection is a great
tool to improve your app.

667
00:36:22.696 --> 00:36:23.956
It's very powerful.

668
00:36:24.536 --> 00:36:26.726
Understand what your usage
pattern is for users.

669
00:36:26.726 --> 00:36:28.206
What are your popular features.

670
00:36:29.346 --> 00:36:33.906
Where users running into
issues, errors, crashing.

671
00:36:34.846 --> 00:36:37.896
But all data collection
should be decision driven.

672
00:36:38.696 --> 00:36:42.606
You should have an engineering
or business decision that made

673
00:36:42.736 --> 00:36:45.136
from the data you collect.

674
00:36:45.276 --> 00:36:47.446
As soon as the data
flows in, you'll be able

675
00:36:47.446 --> 00:36:48.466
to make that decision.

676
00:36:49.426 --> 00:36:51.876
I really feel like
data collection,

677
00:36:51.936 --> 00:36:56.106
all data collection impacts
privacy to a certain extent.

678
00:36:56.846 --> 00:36:58.726
Now, this doesn't mean

679
00:36:58.786 --> 00:37:00.556
that I think all data
collection is bad.

680
00:36:58.786 --> 00:37:00.556
that I think all data
collection is bad.

681
00:37:02.296 --> 00:37:06.476
But you should weigh the
positives and the risks

682
00:37:07.156 --> 00:37:12.186
and make sure that
they balance out.

683
00:37:12.386 --> 00:37:15.966
So, we've all heard about
data breaches in our industry

684
00:37:16.366 --> 00:37:18.916
and you want to make sure
that the data that you collect

685
00:37:19.376 --> 00:37:22.766
if released you have a solid
explanation of what you're going

686
00:37:22.766 --> 00:37:25.486
to do with that data and
how it improves your app

687
00:37:25.756 --> 00:37:26.566
for your users.

688
00:37:27.636 --> 00:37:31.466
If not, that will only
further impact your reputation.

689
00:37:31.986 --> 00:37:35.816
So now, the first
technique we're going

690
00:37:35.816 --> 00:37:37.486
to apply, its anonymization.

691
00:37:38.446 --> 00:37:40.226
This is removing traces

692
00:37:40.226 --> 00:37:43.646
that will tie this log
back to the originator.

693
00:37:44.626 --> 00:37:48.006
So, here we have a log
for an illegal token

694
00:37:48.006 --> 00:37:49.376
and you can see we
have a path in it.

695
00:37:50.316 --> 00:37:52.146
Now, paths are very,
very sensitive.

696
00:37:52.846 --> 00:37:56.576
We've have a proposed user
name, Johnny Appleseed a neat --

697
00:37:56.656 --> 00:37:58.176
code name, Project Zanzibar.

698
00:37:59.046 --> 00:38:00.516
And we know that
something is happening

699
00:37:59.046 --> 00:38:00.516
And we know that
something is happening

700
00:38:00.516 --> 00:38:02.976
for Project Zanzibar probably
in this financial year.

701
00:38:03.836 --> 00:38:05.796
So, what's the first
thing we should do?

702
00:38:06.026 --> 00:38:06.636
Remove the path.

703
00:38:08.076 --> 00:38:11.866
But file names can still
contain a lot of user data.

704
00:38:11.866 --> 00:38:14.746
People put their names in
it and even code names.

705
00:38:15.556 --> 00:38:20.626
So, what's much better is to
eliminate all user strings.

706
00:38:21.326 --> 00:38:25.146
Only log the type of file that
this error happened within.

707
00:38:25.596 --> 00:38:28.606
It gives you enough information
to be able to track down

708
00:38:28.606 --> 00:38:32.436
and start debugging without
deanonymizing the log.

709
00:38:34.496 --> 00:38:36.316
The second one is aggregation,

710
00:38:36.696 --> 00:38:41.316
and this is grouping together
different logs over time.

711
00:38:41.966 --> 00:38:46.056
You can do this over different
time periods 24 hours a week.

712
00:38:46.676 --> 00:38:50.266
So, let's start out with the
same log that we had last time.

713
00:38:51.406 --> 00:38:53.786
Now, we have grouped it together

714
00:38:53.786 --> 00:38:56.236
under keynote file
errors and others.

715
00:38:57.166 --> 00:38:59.906
So here we still have the
ability to see trends,

716
00:39:00.666 --> 00:39:01.976
understand the frequency,

717
00:39:02.096 --> 00:39:08.986
but without having
all of the raw events.

718
00:39:08.986 --> 00:39:10.456
Sampling is another technique.

719
00:39:11.416 --> 00:39:16.136
This is only gathering, logging
a portion of either the events

720
00:39:16.586 --> 00:39:19.176
or gathering data from only
a portion of your users.

721
00:39:19.176 --> 00:39:23.876
So, let's start out with
the log that we deanonymize.

722
00:39:25.456 --> 00:39:29.686
What would be better,
log from only 1 in 10,

723
00:39:29.686 --> 00:39:31.936
1 in 100, 1 in 10,000 machines.

724
00:39:32.446 --> 00:39:36.786
Now here, we still
have the distribution

725
00:39:36.786 --> 00:39:38.726
so we can still make
conclusions.

726
00:39:39.496 --> 00:39:42.616
But we don't need to collect
data from every single user.

727
00:39:43.136 --> 00:39:47.286
So, depending on the
decision that is driving you

728
00:39:47.286 --> 00:39:50.886
to collect this data, you
also may be able to collect 1

729
00:39:50.886 --> 00:39:52.946
in 10, 1 in 100 events.

730
00:39:54.416 --> 00:39:57.166
This makes it so you don't
have a complete picture

731
00:39:57.706 --> 00:39:58.746
for a single user.

732
00:39:59.296 --> 00:40:00.776
You still have the
same amount of data,

733
00:39:59.296 --> 00:40:00.776
You still have the
same amount of data,

734
00:40:01.216 --> 00:40:02.696
you'll still have
your distribution

735
00:40:03.096 --> 00:40:05.406
but you eliminate
the full picture.

736
00:40:09.276 --> 00:40:13.116
Deresolution is a technique
that eliminates the number

737
00:40:13.116 --> 00:40:22.996
of significant figures you can
apply it mostly to time, size,

738
00:40:24.046 --> 00:40:25.996
and a duration metrics.

739
00:40:27.356 --> 00:40:30.796
So, here we have a full
timestamp and a size

740
00:40:30.966 --> 00:40:32.336
and it looks pretty anonymous.

741
00:40:32.566 --> 00:40:35.946
If I look at this I think,
pretty good, but the things

742
00:40:35.946 --> 00:40:39.196
to think about is if I have
logged this type of information

743
00:40:39.196 --> 00:40:43.676
on the client and this type
of information on the server.

744
00:40:44.176 --> 00:40:48.196
By recombining the two we may
be deanonymizing our client logs

745
00:40:48.196 --> 00:40:52.076
that we worked so hard, applied
other techniques to deanonymize.

746
00:40:53.746 --> 00:40:55.436
So, what should we do?

747
00:40:55.436 --> 00:40:58.576
Let's eliminate minutes,
let's eliminate seconds,

748
00:40:59.766 --> 00:41:03.446
and bucket at the size.

749
00:40:59.766 --> 00:41:03.446
and bucket at the size.

750
00:41:03.446 --> 00:41:05.196
But you can do this
in multiple times.

751
00:41:05.546 --> 00:41:06.656
We can go one further.

752
00:41:07.486 --> 00:41:08.766
Let's say the decision
we're trying

753
00:41:08.766 --> 00:41:13.556
to understand is how much
data is being processed

754
00:41:13.556 --> 00:41:14.556
on which day is.

755
00:41:14.556 --> 00:41:17.116
I want to make sure that
our service don't go

756
00:41:17.116 --> 00:41:18.746
down on Fridays versus Sundays.

757
00:41:19.246 --> 00:41:22.026
So, it may not be important to
know this happened to May 4th

758
00:41:22.736 --> 00:41:25.666
but watch the trend of
how much data is processed

759
00:41:25.666 --> 00:41:27.156
on a Friday versus a Sunday.

760
00:41:27.656 --> 00:41:32.856
[ Pause ]

761
00:41:33.356 --> 00:41:35.646
The next technique is decay

762
00:41:35.646 --> 00:41:39.216
and this applying
deresolution over time.

763
00:41:39.216 --> 00:41:42.116
Now, you may have someone
on your team that says, "No,

764
00:41:42.116 --> 00:41:43.406
we can't deres the data.

765
00:41:43.896 --> 00:41:46.896
I need the full timestamp.

766
00:41:46.896 --> 00:41:47.756
I need the full size.

767
00:41:47.756 --> 00:41:48.776
I need to be able to track

768
00:41:48.776 --> 00:41:51.256
down this individual
transaction or event.

769
00:41:52.266 --> 00:41:55.366
Usually, this is because of
security or fraud reasons.

770
00:41:56.346 --> 00:41:59.536
But just because you have a
need for this type of resolution

771
00:41:59.976 --> 00:42:02.966
on day one does not
mean on the day seven

772
00:41:59.976 --> 00:42:02.966
on day one does not
mean on the day seven

773
00:42:02.966 --> 00:42:04.366
that you have the same need.

774
00:42:04.876 --> 00:42:08.816
You can apply deresolution
over time.

775
00:42:09.196 --> 00:42:11.556
So, first let's take this
over seven days later.

776
00:42:11.556 --> 00:42:13.756
We're going to eliminate
the timestamp fully.

777
00:42:13.806 --> 00:42:16.806
So, you can do this
more than once.

778
00:42:16.806 --> 00:42:18.936
You can do this after
three months, six months,

779
00:42:18.936 --> 00:42:22.276
a year and you can do it
multiple times on the same file.

780
00:42:22.566 --> 00:42:26.236
So, here after 30 days now we've
eliminated the full date time.

781
00:42:26.366 --> 00:42:32.646
So, I've talked a lot about what
decision is driving the data

782
00:42:32.646 --> 00:42:36.556
and how that helps you choose
what collection technique

783
00:42:36.556 --> 00:42:37.776
to apply.

784
00:42:38.296 --> 00:42:40.216
But if you ask yourself
the question,

785
00:42:40.816 --> 00:42:43.326
why am I collecting this
data and you can think

786
00:42:43.326 --> 00:42:46.486
of a good answer or
maybe you say, "Oh,

787
00:42:46.486 --> 00:42:48.106
I think it'd be really
interesting."

788
00:42:48.786 --> 00:42:52.176
Then the best thing to do is
to not collect the data at all.

789
00:42:52.176 --> 00:42:52.243
[ Pause ]

790
00:42:52.243 --> 00:43:01.196
Now, I've walk through
six different techniques

791
00:42:52.243 --> 00:43:01.196
Now, I've walk through
six different techniques

792
00:43:01.196 --> 00:43:04.886
that you can apply and you can
apply them all on the same log.

793
00:43:05.256 --> 00:43:08.036
But there are tools in
your tool belt to use

794
00:43:09.126 --> 00:43:10.326
and to apply throughout.

795
00:43:10.516 --> 00:43:11.976
So, this is the things
you should think

796
00:43:11.976 --> 00:43:14.976
about when you're adding
new logging, new features

797
00:43:15.546 --> 00:43:18.066
or take a look back at the
logging you already have

798
00:43:18.356 --> 00:43:23.846
and think which of these can
I use and apply to there.

799
00:43:23.996 --> 00:43:26.846
So, fingerprinting is something
that's coming up more and more

800
00:43:26.846 --> 00:43:30.746
in the news and what is it, what
do they mean by fingerprinting?

801
00:43:32.136 --> 00:43:34.336
This is one of the
large collection

802
00:43:34.336 --> 00:43:37.496
of fairly static
metrics are collected

803
00:43:37.496 --> 00:43:41.186
and then it can form a
unique persistent fingerprint

804
00:43:41.626 --> 00:43:44.916
and this will identify
a specific device.

805
00:43:46.726 --> 00:43:49.946
This doesn't need to contain
any personal information

806
00:43:50.466 --> 00:43:53.156
and it can be done accidentally.

807
00:43:53.446 --> 00:43:55.276
A lot of times, this can
be done when you're trying

808
00:43:55.276 --> 00:43:57.456
to understand, "What
is the configuration

809
00:43:57.456 --> 00:43:59.596
that most users have set up?"

810
00:43:59.596 --> 00:44:03.706
Things like timestamps or what
libraries are in his phone.

811
00:43:59.596 --> 00:44:03.706
Things like timestamps or what
libraries are in his phone.

812
00:44:03.706 --> 00:44:07.596
But the key thing here is,

813
00:44:07.906 --> 00:44:10.546
you need to apply the
techniques I mentioned to try

814
00:44:10.546 --> 00:44:11.966
and eliminate this risk.

815
00:44:13.396 --> 00:44:16.006
Especially deresolution
is a great one to use

816
00:44:16.006 --> 00:44:18.166
because as the buckets
get bigger,

817
00:44:18.586 --> 00:44:23.626
makes it a smaller chance to
any user will have a unique set

818
00:44:23.626 --> 00:44:26.416
of data across all of
your data collection.

819
00:44:26.916 --> 00:44:32.426
[ Pause ]

820
00:44:32.926 --> 00:44:37.126
So, you're users have trusted
you with a lot of data.

821
00:44:38.796 --> 00:44:41.296
They may have given you their
name or many other things

822
00:44:41.296 --> 00:44:45.456
and it's important to use the
tools that we provide in the OS

823
00:44:45.536 --> 00:44:48.336
to help protect that data.

824
00:44:48.496 --> 00:44:52.226
So, first thing is
application credentials.

825
00:44:52.486 --> 00:44:54.916
You should always be
storing them in the keychain.

826
00:44:55.396 --> 00:44:59.556
Think twice whether you
synchronize the credentials

827
00:44:59.556 --> 00:45:00.376
across devices.

828
00:44:59.556 --> 00:45:00.376
across devices.

829
00:45:00.746 --> 00:45:03.676
Do you really need to?

830
00:45:03.906 --> 00:45:05.366
Encrypt your traffic.

831
00:45:06.006 --> 00:45:11.036
Use SSL/TLS and really
on this one it's time.

832
00:45:12.216 --> 00:45:16.076
Also, when you're
storing data on disk,

833
00:45:16.076 --> 00:45:17.826
use the built-in
data protection.

834
00:45:18.156 --> 00:45:20.276
There's a great talk
from last year,

835
00:45:21.056 --> 00:45:24.676
Session 706 called
Protecting User's Data

836
00:45:24.676 --> 00:45:27.756
that walks you clearly
through the steps of how

837
00:45:27.756 --> 00:45:29.146
to apply data protection.

838
00:45:29.646 --> 00:45:34.556
[ Pause ]

839
00:45:35.056 --> 00:45:37.116
So, these policies
and techniques

840
00:45:37.116 --> 00:45:39.246
that I mentioned
are all great ways

841
00:45:39.246 --> 00:45:42.416
and great things you can
apply to help maintain

842
00:45:42.416 --> 00:45:44.656
that relationship
with your users.

843
00:45:44.826 --> 00:45:47.716
There are more that we didn't
get today like privacy by design

844
00:45:47.716 --> 00:45:50.526
and there'll be a link in
the more information section

845
00:45:50.526 --> 00:45:52.116
that can point you
to more of these.

846
00:45:52.626 --> 00:45:56.056
But I want to leave you
with one last thing.

847
00:45:56.176 --> 00:45:57.796
It's just an easy trick I use.

848
00:45:58.586 --> 00:46:01.966
I call it "the parent
or grandparent test."

849
00:45:58.586 --> 00:46:01.966
I call it "the parent
or grandparent test."

850
00:46:01.966 --> 00:46:06.326
If I explain in clear language
to my grandmother, what's going

851
00:46:06.326 --> 00:46:10.286
on and why that behavior
is happening.

852
00:46:10.326 --> 00:46:12.636
If she nods, and has understand?

853
00:46:12.986 --> 00:46:14.936
Then good, we're
on the right road.

854
00:46:15.576 --> 00:46:19.466
But if she doesn't
understand, looks confused,

855
00:46:19.646 --> 00:46:23.636
or gives me a not great look
then that's the time to go back,

856
00:46:23.636 --> 00:46:27.396
look at these policies that I
mentioned and apply them again.

857
00:46:27.956 --> 00:46:32.776
So, since its Friday, all the
related sessions have already

858
00:46:32.776 --> 00:46:36.326
happened so, these are
great talks for you

859
00:46:36.326 --> 00:46:38.036
to go look online and watch.

860
00:46:38.296 --> 00:46:40.636
The first one is Protecting
Secrets with the Keychain.

861
00:46:40.636 --> 00:46:43.556
And the second one
is A Practical Guide

862
00:46:43.556 --> 00:46:44.486
to the App Sandbox.

863
00:46:45.706 --> 00:46:48.656
Also, the one I just mentioned
about data protection.

864
00:46:49.846 --> 00:46:51.626
So, if you think of
a question later,

865
00:46:51.746 --> 00:46:53.916
Paul Danbold is a
great resource.

866
00:46:53.916 --> 00:46:56.356
He'll point you or your
questions to the right place.

867
00:46:56.466 --> 00:47:01.796
Also, David created some great
sample code, go check it out.

868
00:46:56.466 --> 00:47:01.796
Also, David created some great
sample code, go check it out.

869
00:47:02.036 --> 00:47:04.206
Use it. Learn from it.

870
00:47:05.156 --> 00:47:09.096
There's also more documentation
under the programming guide

871
00:47:10.496 --> 00:47:14.716
that you can find to
understand more about privacy

872
00:47:14.716 --> 00:47:17.006
and you can dive-in deeper.

873
00:47:17.106 --> 00:47:18.606
You can always find
great information

874
00:47:18.646 --> 00:47:19.956
on Apple Developer Forums.

875
00:47:21.936 --> 00:47:24.146
Now, I know we talked
about a whole bunch

876
00:47:24.146 --> 00:47:26.016
of different things today.

877
00:47:26.016 --> 00:47:29.746
Identifiers, purpose
strings, data protection.

878
00:47:30.096 --> 00:47:33.656
But I want leave you with a
few clear actions to go do.

879
00:47:34.656 --> 00:47:39.356
Test on iOS 7, especially if
you have an app in the App Store

880
00:47:39.356 --> 00:47:40.396
that is several years old.

881
00:47:40.396 --> 00:47:42.686
You want to understand and sure

882
00:47:42.686 --> 00:47:44.086
that you do not have
the user impact.

883
00:47:45.396 --> 00:47:46.766
Test all cases.

884
00:47:47.786 --> 00:47:49.456
Also add purpose strings.

885
00:47:49.646 --> 00:47:51.946
And if you've have not
already added a link

886
00:47:51.946 --> 00:47:56.126
to your privacy policy,
please go add it.

887
00:47:56.126 --> 00:47:59.246
All of your collection should
be driven by decisions.

888
00:47:59.816 --> 00:48:03.116
And lastly, maintain
your relationship

889
00:47:59.816 --> 00:48:03.116
And lastly, maintain
your relationship

890
00:48:03.116 --> 00:48:06.606
and strengthen your relationship
with your users by thinking

891
00:48:06.736 --> 00:48:10.146
through privacy implications
throughout everywhere

892
00:48:10.146 --> 00:48:10.876
in your design.

893
00:48:11.796 --> 00:48:14.976
Now, thank you very much both
on behalf of me and David

894
00:48:15.226 --> 00:48:17.176
and have a great rest of WWDC.

895
00:48:17.676 --> 00:48:25.280
[ Applause ]
