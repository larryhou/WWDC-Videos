WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:00.506 --> 00:00:10.496 A:middle
[ Silence ]

00:00:10.996 --> 00:00:11.906 A:middle
&gt;&gt; Good morning.

00:00:13.256 --> 00:00:16.456 A:middle
[applause] Before
we get started,

00:00:17.236 --> 00:00:19.396 A:middle
I'd like to do a
small, informal survey.

00:00:19.996 --> 00:00:22.146 A:middle
How many of you are
new Apple developers?

00:00:22.146 --> 00:00:27.906 A:middle
Please clap your hands.

00:00:27.986 --> 00:00:28.536 A:middle
[applause] Excellent.

00:00:28.676 --> 00:00:32.595 A:middle
Welcome. And how many
of you have made an app

00:00:33.056 --> 00:00:35.826 A:middle
for iPhone, iPad, or iPod Touch?

00:00:35.826 --> 00:00:40.586 A:middle
Please clap your hands.

00:00:41.136 --> 00:00:42.156 A:middle
[applause] It sounds
like about all of you.

00:00:42.156 --> 00:00:44.826 A:middle
OK. And how many of those

00:00:44.826 --> 00:00:47.516 A:middle
that have made apps have
brought those same apps

00:00:47.816 --> 00:00:49.406 A:middle
over to OS X, to the Mac?

00:00:49.906 --> 00:00:52.746 A:middle
[applause] Sounds
like a few of you.

00:00:52.746 --> 00:00:54.696 A:middle
But it sounds like we're all
in the right place today.

00:00:55.046 --> 00:00:56.976 A:middle
Did you know that in
the last quarter alone,

00:00:56.976 --> 00:00:59.066 A:middle
Apple sold nearly
4 million Macs?

00:00:59.926 --> 00:01:02.676 A:middle
Yeah, and we want your apps to
be in every single one of them.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:59.926 --> 00:01:02.676 A:middle
Yeah, and we want your apps to
be in every single one of them.

00:01:02.806 --> 00:01:04.766 A:middle
And we're here to show
you how to do that.

00:01:05.596 --> 00:01:07.916 A:middle
Now, after you leave
here today, you're going

00:01:07.916 --> 00:01:09.736 A:middle
to be ready to do three things.

00:01:10.866 --> 00:01:18.456 A:middle
Number one, you're going to be
able to rethink your iOS app

00:01:18.796 --> 00:01:22.826 A:middle
in terms of a Mac,
in terms of OS X.

00:01:23.196 --> 00:01:28.186 A:middle
Two, you're going to be ready
to restructure your code,

00:01:28.346 --> 00:01:30.466 A:middle
just cleanly separate
your model from your view

00:01:30.466 --> 00:01:33.596 A:middle
and your controller so that you
can maximize your code reuse.

00:01:33.596 --> 00:01:35.146 A:middle
And number 3 is easy.

00:01:35.506 --> 00:01:37.686 A:middle
You're going to be ready
to just get started.

00:01:39.046 --> 00:01:40.306 A:middle
So let's talk about your design.

00:01:40.766 --> 00:01:45.096 A:middle
Many of you may be thinking,
"OK, so I have my iOS app

00:01:45.096 --> 00:01:47.276 A:middle
and I'm going to bring it
over to OS X and I'm going

00:01:47.276 --> 00:01:48.396 A:middle
to leave everything the same

00:01:48.396 --> 00:01:50.436 A:middle
because that's going
to be pretty easy."

00:01:51.356 --> 00:01:52.966 A:middle
I'm going to discourage
you from doing that.

00:01:53.116 --> 00:01:56.066 A:middle
Your users are going to love
it if you embrace the things

00:01:56.066 --> 00:01:57.046 A:middle
that make the Mac great.

00:01:57.876 --> 00:01:59.946 A:middle
So what makes the Mac
different form iOS?

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:01.096 --> 00:02:04.126 A:middle
Well, for one thing,
screen size.

00:02:05.326 --> 00:02:10.556 A:middle
If you think about it, your
iPhone is on a 4-inch display,

00:02:10.556 --> 00:02:13.196 A:middle
if you have an iPhone 5,
or if you have an iPad,

00:02:13.196 --> 00:02:14.376 A:middle
it's on a 10-inch display.

00:02:15.256 --> 00:02:17.836 A:middle
But our Macs go from
an 11-inch Macbook Air

00:02:17.836 --> 00:02:20.126 A:middle
to a 27-inch Thunderbolt
Display.

00:02:20.156 --> 00:02:24.536 A:middle
And your users could
have multiple displays.

00:02:25.296 --> 00:02:26.456 A:middle
So, that's something
to think about.

00:02:26.456 --> 00:02:30.656 A:middle
And then on top of that,
your content is going to be

00:02:30.656 --> 00:02:32.036 A:middle
on a window that's resizable.

00:02:32.756 --> 00:02:37.606 A:middle
So, who knows how big your
content will be for the user

00:02:37.606 --> 00:02:38.646 A:middle
at any one point in time.

00:02:39.216 --> 00:02:42.026 A:middle
So, I'm going to encourage
you to use Auto Layout

00:02:42.406 --> 00:02:44.416 A:middle
because that's going to
solve a lot of your issues

00:02:44.786 --> 00:02:47.486 A:middle
with these different
display sizes.

00:02:48.496 --> 00:02:50.086 A:middle
OK. Let's talk about
input devices.

00:02:51.756 --> 00:02:54.646 A:middle
On iOS, your primary input
device is your finger

00:02:55.086 --> 00:03:00.686 A:middle
and as such, we've given
you guidance to use controls

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:55.086 --> 00:03:00.686 A:middle
and as such, we've given
you guidance to use controls

00:03:00.686 --> 00:03:04.046 A:middle
and buttons that are
44 points by 44 points.

00:03:05.406 --> 00:03:10.006 A:middle
Now, in OS X, your input
devices are a trackpad or mouse,

00:03:10.546 --> 00:03:11.796 A:middle
and are much more precise.

00:03:11.796 --> 00:03:15.186 A:middle
So you don't want to make your
controls unnecessarily large

00:03:15.186 --> 00:03:16.286 A:middle
on OS X.

00:03:16.286 --> 00:03:17.866 A:middle
It's going to look-- well,

00:03:17.866 --> 00:03:20.036 A:middle
it looks out of place
so keep that in mind.

00:03:21.306 --> 00:03:22.316 A:middle
What about other things?

00:03:22.316 --> 00:03:24.206 A:middle
What are some other things
that make the Mac different?

00:03:25.146 --> 00:03:30.306 A:middle
Well, for one thing, the Mac's
got menus and keyboard shortcuts

00:03:30.406 --> 00:03:32.106 A:middle
and these aren't just any menus.

00:03:32.926 --> 00:03:35.076 A:middle
Mac users are going to
be expecting to see File,

00:03:35.076 --> 00:03:37.886 A:middle
Edit, and the Window menu.

00:03:38.546 --> 00:03:42.996 A:middle
And they're expecting to see
the standard keyboard shortcuts

00:03:43.406 --> 00:03:44.376 A:middle
for those menus.

00:03:44.836 --> 00:03:46.546 A:middle
Like for instance,
Cut, Copy, and Paste.

00:03:47.056 --> 00:03:51.046 A:middle
And they're going to expect
to see Undo and Redo support.

00:03:51.216 --> 00:03:53.646 A:middle
You may have it in your
iOS apps but you may not.

00:03:53.676 --> 00:03:56.676 A:middle
But on the Mac, if it's
appropriate, please use that,

00:03:57.086 --> 00:03:58.916 A:middle
because your Mac
users will expect it.

00:03:58.956 --> 00:04:03.496 A:middle
They're going to expect to be
able to drag files and texts

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:58.956 --> 00:04:03.496 A:middle
They're going to expect to be
able to drag files and texts

00:04:03.496 --> 00:04:07.676 A:middle
and images into, out of, and
between windows in your apps.

00:04:08.926 --> 00:04:11.736 A:middle
Quick Look is a technology
on OS X that allows users

00:04:11.736 --> 00:04:15.626 A:middle
to see the contents of your file
without opening it in your app.

00:04:16.666 --> 00:04:18.685 A:middle
And we've handled many
of the common cases

00:04:18.685 --> 00:04:20.786 A:middle
like for PDF, and texts, images.

00:04:21.476 --> 00:04:25.556 A:middle
But if you're making a custom
file format in your app,

00:04:25.556 --> 00:04:31.066 A:middle
it'll be great if you added a
Quick Look plugin to allow users

00:04:31.066 --> 00:04:34.636 A:middle
to see the contents of your
file without opening your app.

00:04:34.636 --> 00:04:35.966 A:middle
That would really
make them happy.

00:04:36.856 --> 00:04:40.826 A:middle
Similarly, Spotlight, that's
the technology that allows users

00:04:40.826 --> 00:04:42.846 A:middle
to search the contents
of your file.

00:04:43.226 --> 00:04:44.736 A:middle
So if you have a
custom file format,

00:04:45.596 --> 00:04:48.476 A:middle
consider making a
custom Spotlight indexer

00:04:48.476 --> 00:04:51.106 A:middle
so that users can search
the contents of your file.

00:04:51.766 --> 00:04:54.366 A:middle
So then, we've talked
about design a little bit.

00:04:54.366 --> 00:04:55.486 A:middle
Let's talk about your code.

00:04:56.286 --> 00:04:58.906 A:middle
Now the good news is that
you can leverage a lot

00:04:58.906 --> 00:05:03.286 A:middle
of existing knowledge that
you already know from iOS.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:58.906 --> 00:05:03.286 A:middle
of existing knowledge that
you already know from iOS.

00:05:03.736 --> 00:05:05.166 A:middle
For instance, the
design patterns,

00:05:05.646 --> 00:05:09.436 A:middle
the model-view-controller,
the target-action pattern,

00:05:09.876 --> 00:05:14.666 A:middle
the responder chain, delegation,
all of those patterns work

00:05:14.666 --> 00:05:16.816 A:middle
on iOS just like
they do in OS X.

00:05:17.326 --> 00:05:20.596 A:middle
A new development
environment, Xcode,

00:05:20.786 --> 00:05:25.016 A:middle
with its built-in user Interface
Editor and Static Analyzer,

00:05:25.486 --> 00:05:29.596 A:middle
its profiling tools,
and all the things

00:05:29.596 --> 00:05:32.476 A:middle
like the source control tools
that you get from Xcode,

00:05:32.476 --> 00:05:35.286 A:middle
all of those are available
on OS X as well as an iOS

00:05:35.286 --> 00:05:38.356 A:middle
because you're using the
same development tool, Xcode.

00:05:39.476 --> 00:05:44.996 A:middle
The languages, C, Objective-C,
C++, and many of the frameworks

00:05:45.056 --> 00:05:47.596 A:middle
like Core Foundation
and Foundation are going

00:05:47.596 --> 00:05:51.196 A:middle
to be the same on iOS
as they are in OS X.

00:05:52.236 --> 00:05:54.016 A:middle
The resources, your images,

00:05:54.346 --> 00:05:56.636 A:middle
some of your images might be
different because you're going

00:05:56.636 --> 00:05:59.536 A:middle
to be resizing them to
make them smaller perhaps,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:00.406 --> 00:06:01.696 A:middle
but some of them
will be the same.

00:06:01.696 --> 00:06:02.916 A:middle
You'll be able to
use those again.

00:06:03.436 --> 00:06:06.076 A:middle
And then, also the
image technologies,

00:06:06.346 --> 00:06:08.926 A:middle
this week we're talking
about asset catalogues,

00:06:08.926 --> 00:06:12.206 A:middle
the Xcode talked about
that and that's one

00:06:12.206 --> 00:06:15.706 A:middle
of the things that's
available on both OS X and iOS

00:06:16.776 --> 00:06:19.266 A:middle
and you can use that for this,
and also the naming conventions.

00:06:19.266 --> 00:06:22.646 A:middle
If you're doing a Retina Mac,
you're going to add at 2X

00:06:23.056 --> 00:06:26.276 A:middle
to your file names just
like you do on iOS.

00:06:26.776 --> 00:06:30.266 A:middle
And localizations, most
of your strings are going

00:06:30.266 --> 00:06:33.476 A:middle
to be exactly the same
and the technologies used

00:06:33.736 --> 00:06:35.076 A:middle
to localize are going
to be the same.

00:06:35.076 --> 00:06:37.986 A:middle
So you're going to use
NSLocalizedString method

00:06:38.366 --> 00:06:41.936 A:middle
to make sure that your
localizations work.

00:06:42.896 --> 00:06:45.166 A:middle
So, I've outlined some of
the things that are the same.

00:06:45.166 --> 00:06:45.906 A:middle
So what's different?

00:06:45.906 --> 00:06:49.226 A:middle
Well, let's take a deeper
look at the technology stack.

00:06:49.806 --> 00:06:54.896 A:middle
So here's a big table
and that has a lot

00:06:55.026 --> 00:06:57.576 A:middle
of the frameworks
on iOS and OS X.

00:06:57.576 --> 00:06:59.336 A:middle
There's a couple of things
I'd like you to notice.

00:06:59.336 --> 00:07:02.036 A:middle
Number one is that a
lot of the frameworks

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:59.336 --> 00:07:02.036 A:middle
Number one is that a
lot of the frameworks

00:07:02.036 --> 00:07:05.046 A:middle
on iOS are the exact
same as they are in OS X.

00:07:05.046 --> 00:07:09.556 A:middle
And this is actually just
a small subset of all

00:07:09.556 --> 00:07:11.136 A:middle
of the frameworks that
we have available.

00:07:11.136 --> 00:07:12.396 A:middle
I only did one slide here.

00:07:13.116 --> 00:07:14.006 A:middle
Actually, I did two.

00:07:14.006 --> 00:07:17.116 A:middle
We'll look at the other one
in a second, but, anyway.

00:07:17.226 --> 00:07:19.906 A:middle
The-- but yeah, so keep in mind
that most of the frameworks--

00:07:19.906 --> 00:07:21.476 A:middle
a lot of the frameworks
are going to be the same.

00:07:21.476 --> 00:07:24.146 A:middle
Now, there are some that are
different and of the ones

00:07:24.146 --> 00:07:25.326 A:middle
that are different,
most of the ones

00:07:25.326 --> 00:07:28.486 A:middle
that are different are going to
be subsets of the OS X version.

00:07:28.486 --> 00:07:31.066 A:middle
So you get to keep your code
the same because you're going

00:07:31.066 --> 00:07:35.516 A:middle
to be using the subset
part on iOS.

00:07:35.516 --> 00:07:37.806 A:middle
So when you move to OS X, you
can even use some new features.

00:07:38.816 --> 00:07:43.206 A:middle
The last thing I would like to
point out, most of you are going

00:07:43.206 --> 00:07:48.646 A:middle
to be spending a lot of time
in UIKit and the news is

00:07:48.646 --> 00:07:51.436 A:middle
that UIKit does not
exist on OS X.

00:07:51.826 --> 00:07:54.196 A:middle
But the good news is
that we have AppKit.

00:07:54.246 --> 00:07:56.906 A:middle
And actually, UIKit
was inspired by AppKit.

00:07:57.256 --> 00:07:57.626 A:middle
That's right.

00:07:57.766 --> 00:08:00.876 A:middle
That means that a lot of the
things will feel very familiar.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:57.766 --> 00:08:00.876 A:middle
That means that a lot of the
things will feel very familiar.

00:08:00.876 --> 00:08:04.886 A:middle
And we're going to talk about
some of the differences and ways

00:08:04.886 --> 00:08:06.086 A:middle
that you can cope with those.

00:08:06.726 --> 00:08:08.936 A:middle
And then one more slide on
technology, I want to talk

00:08:08.936 --> 00:08:12.626 A:middle
about games briefly because
many of you may be making games.

00:08:13.106 --> 00:08:16.496 A:middle
If you're making games for OS
X, there's some great news.

00:08:16.496 --> 00:08:19.126 A:middle
One thing is we have OpenGL,
Game Center, and SpriteKit.

00:08:19.126 --> 00:08:24.306 A:middle
And if you're making a Mac 2D
game, really take advantage

00:08:24.306 --> 00:08:27.516 A:middle
of SpriteKit if you can
because that's going to do most

00:08:27.516 --> 00:08:28.566 A:middle
of the heavy lifting for you.

00:08:28.566 --> 00:08:30.286 A:middle
That's already cross-platform

00:08:30.286 --> 00:08:32.126 A:middle
and so you'll have an
app that works on both.

00:08:33.145 --> 00:08:36.206 A:middle
So, now that we've talked
a little bit about that,

00:08:36.316 --> 00:08:38.836 A:middle
let's go into design patterns.

00:08:40.176 --> 00:08:41.515 A:middle
Does everyone recognize that,

00:08:41.515 --> 00:08:43.666 A:middle
that's the Model-View-Controller
design pattern,

00:08:44.416 --> 00:08:46.156 A:middle
and hopefully you're
using that in your apps.

00:08:46.596 --> 00:08:47.116 A:middle
If you're not,

00:08:47.506 --> 00:08:50.396 A:middle
Model-View-Controller is a
software architecture pattern

00:08:50.396 --> 00:08:53.436 A:middle
that separates the
representation of information

00:08:53.436 --> 00:08:54.886 A:middle
from the user's interaction
with it.

00:08:55.696 --> 00:08:58.196 A:middle
And the model, we're
going to talk about first,

00:08:59.056 --> 00:09:02.806 A:middle
is only supposed to be used
for your data structures,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:59.056 --> 00:09:02.806 A:middle
is only supposed to be used
for your data structures,

00:09:03.616 --> 00:09:04.966 A:middle
your business rules and logic.

00:09:05.406 --> 00:09:07.586 A:middle
And if you cleanly
separate it out that way,

00:09:07.686 --> 00:09:09.196 A:middle
you're going to get
some benefits.

00:09:09.666 --> 00:09:12.886 A:middle
Almost all of your model
code is going to be reusable.

00:09:13.206 --> 00:09:17.096 A:middle
Why? Because the frameworks
underneath the model

00:09:17.096 --> 00:09:18.956 A:middle
are cross-platform.

00:09:19.416 --> 00:09:21.756 A:middle
So what that means,
if you have some code

00:09:21.756 --> 00:09:26.876 A:middle
and here's some iOS code, that
is going to init an array,

00:09:27.606 --> 00:09:30.676 A:middle
a mutable array with ten
elements and we're going

00:09:30.676 --> 00:09:35.016 A:middle
to add a string to it,
in this case, WWDC 2013.

00:09:35.536 --> 00:09:37.256 A:middle
Your OS X code is going
to look like this.

00:09:37.376 --> 00:09:39.206 A:middle
It's the same, right?

00:09:39.206 --> 00:09:40.926 A:middle
That's great.

00:09:40.926 --> 00:09:42.126 A:middle
So you don't have to
do any work there.

00:09:42.376 --> 00:09:44.296 A:middle
So cleanly separate your model.

00:09:44.296 --> 00:09:45.906 A:middle
Now, one thing to
keep in mind is

00:09:45.906 --> 00:09:49.886 A:middle
that your model code may be
making an assumption that's not

00:09:49.886 --> 00:09:54.886 A:middle
true on the Mac which is
Macs are 64 bit and iOS,

00:09:54.966 --> 00:09:57.526 A:middle
your iOS code may not
be ready to handle that.

00:09:57.526 --> 00:09:59.076 A:middle
So what do you for that?

00:09:59.216 --> 00:10:01.206 A:middle
Well, it's really easy.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:59.216 --> 00:10:01.206 A:middle
Well, it's really easy.

00:10:01.836 --> 00:10:04.496 A:middle
Adopt NSInteger and NSUInterger.

00:10:04.626 --> 00:10:06.826 A:middle
Those are variably sized
integers that are going

00:10:06.826 --> 00:10:08.796 A:middle
to give you 64 bit
on the hardware

00:10:08.876 --> 00:10:11.826 A:middle
and we'll give you 32
bits when you need it.

00:10:12.386 --> 00:10:14.406 A:middle
So, that's perfect.

00:10:14.406 --> 00:10:17.886 A:middle
Now what if you really do need
a 32 bit integer and not 64 bit?

00:10:18.136 --> 00:10:20.766 A:middle
Like for instance, if you're
doing a binary file format

00:10:20.766 --> 00:10:23.396 A:middle
that's already specified
and you want to make sure

00:10:23.396 --> 00:10:28.546 A:middle
that it is right, well, we
recommend that you use uint32-t

00:10:28.546 --> 00:10:31.826 A:middle
and its cousins and that's
got you taken care of.

00:10:31.826 --> 00:10:35.406 A:middle
So what about platform
specific code?

00:10:36.156 --> 00:10:39.836 A:middle
So if I'm writing iOS only code
and there may be some times

00:10:39.836 --> 00:10:41.916 A:middle
that you do that, you're going

00:10:41.916 --> 00:10:46.056 A:middle
to use the preprocessor
macro #if TARGET-OS-IPHONE.

00:10:46.586 --> 00:10:49.366 A:middle
And if you're doing
Mac only code,

00:10:50.146 --> 00:10:55.406 A:middle
you would use #if TARGET-OS-MAC
&amp;&amp; !TARGET-OS-IPHONE.

00:10:55.406 --> 00:10:59.926 A:middle
OK. So now that we've
talked about the model,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:00.176 --> 00:11:01.026 A:middle
let's go on to the view.

00:11:01.946 --> 00:11:05.576 A:middle
The view is any output
representation of your data

00:11:06.176 --> 00:11:08.126 A:middle
and it's also where you're
user interface lives.

00:11:08.906 --> 00:11:12.486 A:middle
So, a big part of the user
interface are the built-in

00:11:12.486 --> 00:11:13.156 A:middle
control set.

00:11:13.826 --> 00:11:17.626 A:middle
So what does it look
like on OS X?

00:11:18.586 --> 00:11:20.406 A:middle
Well here's kind of an
idea of the landscape.

00:11:20.736 --> 00:11:23.636 A:middle
We have a lot of controls
on iOS a ton of controls,

00:11:23.636 --> 00:11:25.036 A:middle
even more controls on OS X.

00:11:25.036 --> 00:11:28.476 A:middle
And they overlap and there are
a lot of controls in common

00:11:28.476 --> 00:11:29.516 A:middle
but there are some
that are different.

00:11:29.616 --> 00:11:31.796 A:middle
So, you'll need to
look at alternatives

00:11:31.796 --> 00:11:33.396 A:middle
in some cases between the two.

00:11:33.396 --> 00:11:37.996 A:middle
One of the most used controls
on iOS is the TableView,

00:11:38.646 --> 00:11:41.986 A:middle
and good news, there's
a TableView on OS X.

00:11:42.926 --> 00:11:44.556 A:middle
So, it's called NSTableView.

00:11:45.316 --> 00:11:48.956 A:middle
If you're noticing a pattern,
it's just a coincidence

00:11:49.196 --> 00:11:52.016 A:middle
but all the UIs and
actually, yeah.

00:11:52.476 --> 00:11:55.146 A:middle
So, there's some
similarities between the two.

00:11:55.146 --> 00:11:58.026 A:middle
They both use data
sources as their delegates.

00:11:58.796 --> 00:12:02.956 A:middle
They both encourage the use
of reusable cells that's going

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:58.796 --> 00:12:02.956 A:middle
They both encourage the use
of reusable cells that's going

00:12:02.956 --> 00:12:04.146 A:middle
to maximize your performance.

00:12:04.616 --> 00:12:08.976 A:middle
And they both animate insertion,
deletion, and moving of cells.

00:12:08.976 --> 00:12:10.756 A:middle
So, that's great.

00:12:11.346 --> 00:12:12.676 A:middle
There are some differences too.

00:12:12.776 --> 00:12:14.726 A:middle
One of the things
that's different is

00:12:14.726 --> 00:12:16.996 A:middle
that NSTableView actually
has two different variants,

00:12:17.156 --> 00:12:19.386 A:middle
that's for legacy reasons.

00:12:20.086 --> 00:12:21.606 A:middle
You want to use the
view-based variant.

00:12:21.716 --> 00:12:23.116 A:middle
That's most similar to iOS.

00:12:23.116 --> 00:12:26.136 A:middle
The other one NSCell and
I'm done talking about that.

00:12:26.136 --> 00:12:30.156 A:middle
It's an NScell-based
variant but don't use that.

00:12:30.156 --> 00:12:33.056 A:middle
OK. The other thing to keep
in mind is that you're going

00:12:33.056 --> 00:12:34.206 A:middle
to get multiple columns.

00:12:34.336 --> 00:12:35.576 A:middle
So, yay, that's cool.

00:12:36.276 --> 00:12:40.326 A:middle
And lastly, is this really
the right control for you?

00:12:40.646 --> 00:12:41.176 A:middle
It may be.

00:12:41.646 --> 00:12:45.706 A:middle
If you're doing tabular data
then it's the right control

00:12:45.706 --> 00:12:47.286 A:middle
for iOS and OS X.

00:12:47.286 --> 00:12:49.096 A:middle
But if you're doing
something else,

00:12:49.396 --> 00:12:52.076 A:middle
then it might be the
right control for iOS

00:12:52.106 --> 00:12:53.726 A:middle
but maybe not for OS X.

00:12:53.726 --> 00:12:55.396 A:middle
So let's take a look
at some examples.

00:12:56.276 --> 00:13:00.406 A:middle
So here on your left, you're
going to see a TableView

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:56.276 --> 00:13:00.406 A:middle
So here on your left, you're
going to see a TableView

00:13:00.406 --> 00:13:04.786 A:middle
that the user selecting a region
out of a whole list of regions.

00:13:05.176 --> 00:13:07.506 A:middle
In this case, they've
selected United States.

00:13:07.976 --> 00:13:11.036 A:middle
On OS X, the appropriate control

00:13:11.036 --> 00:13:13.306 A:middle
to use here would
be a popup menu.

00:13:13.906 --> 00:13:16.256 A:middle
So, think about that.

00:13:16.626 --> 00:13:19.716 A:middle
Now, one thing about that
is that you can make those

00:13:19.716 --> 00:13:23.206 A:middle
with NSPopupButton or just drag
them out from Interface Builder.

00:13:23.206 --> 00:13:24.476 A:middle
That's probably the
easier way to go.

00:13:25.556 --> 00:13:26.616 A:middle
So what about something else?

00:13:26.616 --> 00:13:27.726 A:middle
OK. So let's look at this one.

00:13:28.676 --> 00:13:31.056 A:middle
OK. So, here's a TableView

00:13:31.236 --> 00:13:32.856 A:middle
where it has it broken
up into sections.

00:13:32.856 --> 00:13:34.676 A:middle
So this first section, again,
you're selecting an item

00:13:34.676 --> 00:13:36.416 A:middle
out of-- in this
case, just two items.

00:13:36.986 --> 00:13:40.046 A:middle
So, on OS X, we'd recommend
using a radio-button

00:13:40.076 --> 00:13:41.126 A:middle
matrix instead.

00:13:43.006 --> 00:13:47.616 A:middle
And on OS X-- sorry, on
iOS, we have a on-off switch

00:13:47.746 --> 00:13:51.686 A:middle
in your TableView, and
that would be best suited

00:13:51.686 --> 00:13:52.776 A:middle
for a checkbox.

00:13:53.566 --> 00:13:55.306 A:middle
And if-- one thing else
I'd like to point out.

00:13:55.306 --> 00:13:57.746 A:middle
This window here can be
made with a StackView

00:13:57.816 --> 00:13:59.886 A:middle
which will make your
job a lot easier.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:00.086 --> 00:14:00.926 A:middle
So check out that.

00:14:01.356 --> 00:14:04.586 A:middle
NSStackView, it's a new
technology for Mavericks.

00:14:05.346 --> 00:14:08.506 A:middle
OK. So, what if I
am doing custom view

00:14:08.656 --> 00:14:11.626 A:middle
like making a custom button
or that kind of things?

00:14:11.946 --> 00:14:13.476 A:middle
In a lot of cases,
you're going to want

00:14:13.476 --> 00:14:15.996 A:middle
to overwrite UIView or NSView.

00:14:16.426 --> 00:14:18.456 A:middle
So, what if-- so
what's the differences?

00:14:18.456 --> 00:14:22.016 A:middle
They both receive and handle
events, they're both responsible

00:14:22.016 --> 00:14:25.066 A:middle
for drawing, but
there's a couple

00:14:25.066 --> 00:14:26.486 A:middle
of differences so
let's go in those.

00:14:27.096 --> 00:14:29.756 A:middle
The UIView's origin
is in the upper left

00:14:30.156 --> 00:14:32.536 A:middle
and the NSView's origin
is in the lower left.

00:14:33.106 --> 00:14:36.306 A:middle
Before you despair, we'll have
some information on how to fix

00:14:36.616 --> 00:14:39.286 A:middle
that or accommodate for that.

00:14:39.286 --> 00:14:43.406 A:middle
The UIView always has a layer, a
Core Animation layer backing it,

00:14:43.566 --> 00:14:45.966 A:middle
and that has some
interesting benefits.

00:14:46.276 --> 00:14:47.906 A:middle
On NSView, you can have
a Core Animation layer

00:14:47.906 --> 00:14:48.906 A:middle
but you have to opt-in to that.

00:14:49.786 --> 00:14:53.826 A:middle
And then, subviews can draw
outside their bounds on UIView

00:14:53.826 --> 00:14:56.066 A:middle
but they're clip to
their bounds for NSView.

00:14:56.296 --> 00:14:57.436 A:middle
So let's talk about origins.

00:14:57.526 --> 00:14:59.426 A:middle
I promised to show
you how to do that.

00:14:59.706 --> 00:15:00.466 A:middle
Here's what it looks like.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:59.706 --> 00:15:00.466 A:middle
Here's what it looks like.

00:15:00.626 --> 00:15:04.436 A:middle
In UIView, you've got your upper
left origin, NSView, lower left,

00:15:04.626 --> 00:15:07.146 A:middle
you're just going to overwrite
isFlipped and return yes.

00:15:07.846 --> 00:15:08.906 A:middle
And what does that give you?

00:15:09.366 --> 00:15:11.056 A:middle
Well, that.

00:15:12.946 --> 00:15:15.166 A:middle
So, there are some controls

00:15:15.276 --> 00:15:19.666 A:middle
that are actually already have
the origin flipped for you

00:15:20.196 --> 00:15:25.196 A:middle
in advance, so be aware, and
they are NSButton, NSScrollView,

00:15:25.246 --> 00:15:27.786 A:middle
NSSPlitView, NSTabView,
and NSTableView.

00:15:28.096 --> 00:15:29.776 A:middle
So, what about layer
backed views?

00:15:29.776 --> 00:15:33.876 A:middle
So we have the Core
Animation layers on UIView.

00:15:34.196 --> 00:15:35.166 A:middle
What are the benefits?

00:15:35.166 --> 00:15:36.586 A:middle
Why would we want to opt-in?

00:15:37.286 --> 00:15:38.806 A:middle
Well, we'd get smoother
animation.

00:15:38.846 --> 00:15:40.996 A:middle
And if you want to do
anything with CAFilters,

00:15:41.346 --> 00:15:43.616 A:middle
then that's the right
choice for you.

00:15:43.956 --> 00:15:46.156 A:middle
CAFfilters are pretty cool

00:15:46.156 --> 00:15:48.556 A:middle
and if you watched
the SpriteKit Talk,

00:15:48.556 --> 00:15:49.746 A:middle
then you know a little
bit about that.

00:15:50.706 --> 00:15:55.636 A:middle
The downsides are that they
can be more resource intensive.

00:15:55.916 --> 00:15:57.826 A:middle
So, we urge you to test.

00:15:57.826 --> 00:16:01.286 A:middle
Try it out, see if it works
better, see if it fits

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:57.826 --> 00:16:01.286 A:middle
Try it out, see if it works
better, see if it fits

00:16:01.286 --> 00:16:04.526 A:middle
in within the resources you
want to use, and then pick one.

00:16:04.896 --> 00:16:07.466 A:middle
So what about layer
backed views?

00:16:07.836 --> 00:16:10.716 A:middle
So we have layer backed views, I
told you what the benefits are,

00:16:10.826 --> 00:16:13.476 A:middle
and that for UIViews
they are on automatically

00:16:13.476 --> 00:16:15.216 A:middle
and you have to opt-in
on NSViews.

00:16:15.826 --> 00:16:17.936 A:middle
So, how do you opt-in?

00:16:18.316 --> 00:16:21.176 A:middle
Well, in code, you would
call setWantsLayer:YES.

00:16:22.226 --> 00:16:23.486 A:middle
But you can also do it in Xcode.

00:16:24.316 --> 00:16:28.826 A:middle
And so in Xcode, you go into the
Interface Builder portion of it

00:16:28.826 --> 00:16:32.156 A:middle
and you would-- in the inspector
on the right, you're going

00:16:32.156 --> 00:16:38.176 A:middle
to pick the last tab, that
one there, and then you click

00:16:38.176 --> 00:16:39.826 A:middle
on the little checkbox
next to your View

00:16:39.826 --> 00:16:41.406 A:middle
and that would make
it layer backed.

00:16:42.356 --> 00:16:46.526 A:middle
OK. So for iOS, your animation
code might look like this.

00:16:46.526 --> 00:16:48.476 A:middle
So you do an
animateWithDuration,

00:16:49.316 --> 00:16:52.436 A:middle
you pass it a time,
and then you're going

00:16:52.436 --> 00:16:53.506 A:middle
to give it an animation block.

00:16:53.806 --> 00:16:56.096 A:middle
Here we're setting the frame so
we're going to animate the frame

00:16:56.096 --> 00:16:57.336 A:middle
and then I'm closing the block.

00:16:57.596 --> 00:16:59.956 A:middle
On OS X, we're going to
use animation proxies.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:00.416 --> 00:17:03.256 A:middle
The codes look very
familiar but it's going

00:17:03.256 --> 00:17:04.396 A:middle
to be slightly different.

00:17:04.996 --> 00:17:08.016 A:middle
So, instead of changing the
frame on the view directly,

00:17:08.106 --> 00:17:10.316 A:middle
you're going to do
something like this

00:17:10.566 --> 00:17:14.396 A:middle
where you call this
animator proxy in the middle

00:17:14.486 --> 00:17:15.646 A:middle
and that's going to make sure

00:17:15.646 --> 00:17:17.756 A:middle
that your view gets
its frame set

00:17:18.396 --> 00:17:24.606 A:middle
and also that it will animate.

00:17:24.606 --> 00:17:27.246 A:middle
If you notice here that the
we're not setting the time

00:17:27.246 --> 00:17:29.596 A:middle
of the animation that
has an implicit duration

00:17:29.986 --> 00:17:32.736 A:middle
and there's some more details on
that that you can learn about.

00:17:33.256 --> 00:17:38.076 A:middle
And we'll have references
to that at the end.

00:17:38.356 --> 00:17:40.246 A:middle
So, what about events?

00:17:40.316 --> 00:17:45.546 A:middle
So you have on iOS these gesture
recognizers and they're great.

00:17:46.326 --> 00:17:48.146 A:middle
So, you have the
UIGestureRecognizer

00:17:48.146 --> 00:17:50.986 A:middle
and its subclasses and it makes
it really easy to handle events.

00:17:51.276 --> 00:17:54.456 A:middle
On OS X, you can handle all
those same events but we--

00:17:54.456 --> 00:17:56.456 A:middle
there's no such thing as
an NSGestureRecognizer.

00:17:56.456 --> 00:17:57.256 A:middle
So how do you do it?

00:17:57.366 --> 00:17:59.526 A:middle
So here's a
TapGestureRecognizer.

00:17:59.896 --> 00:18:02.996 A:middle
And TapGestureRecognizer,
the idea here it's a lot

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:59.896 --> 00:18:02.996 A:middle
And TapGestureRecognizer,
the idea here it's a lot

00:18:02.996 --> 00:18:04.716 A:middle
of times you use for
a simple interactions

00:18:04.716 --> 00:18:05.726 A:middle
like a simple touch.

00:18:06.246 --> 00:18:09.836 A:middle
So, on OS X, it would
be a simple click.

00:18:10.336 --> 00:18:13.976 A:middle
And so, you would
overwrite the mouseUp event

00:18:13.976 --> 00:18:16.076 A:middle
and handle your click there.

00:18:16.656 --> 00:18:19.106 A:middle
So, pretty easy, and you
could do mouseDown as well

00:18:19.106 --> 00:18:22.676 A:middle
but we recommend mouseUp because
it's more what the user expects.

00:18:23.306 --> 00:18:25.636 A:middle
So they can cancel the event.

00:18:25.936 --> 00:18:27.286 A:middle
OK. So what about long press?

00:18:28.576 --> 00:18:30.606 A:middle
Well, for long press,
you could do this.

00:18:30.826 --> 00:18:33.276 A:middle
It's kind of complicated
but I'll just run

00:18:33.276 --> 00:18:33.816 A:middle
through it real quick.

00:18:33.816 --> 00:18:37.826 A:middle
You set up a timer, and it's
a half a second timer that's

00:18:37.826 --> 00:18:41.826 A:middle
to mimic the way that the
default long press recognizer is

00:18:41.826 --> 00:18:42.156 A:middle
set up.

00:18:42.156 --> 00:18:43.886 A:middle
And then you're going
to do something.

00:18:44.296 --> 00:18:45.836 A:middle
You've set up the
selector to do something,

00:18:45.836 --> 00:18:46.766 A:middle
that's the bottom method.

00:18:47.226 --> 00:18:51.206 A:middle
And then in your mouseUp event,
you can invalidate that timer.

00:18:51.206 --> 00:18:54.016 A:middle
So, like for instance that they
mouseUp before the half second

00:18:54.016 --> 00:18:55.316 A:middle
was over then it would stop it.

00:18:55.316 --> 00:18:57.876 A:middle
So, you'd be effectively
doing a long press there.

00:18:58.176 --> 00:19:01.186 A:middle
But 99 percent of the
time, you're going to want

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:58.176 --> 00:19:01.186 A:middle
But 99 percent of the
time, you're going to want

00:19:01.186 --> 00:19:02.566 A:middle
to use a Right Click instead

00:19:02.566 --> 00:19:06.576 A:middle
because the long press is not
really going to be familiar

00:19:06.886 --> 00:19:10.756 A:middle
for the OS X crowd, and
so, use the right click.

00:19:11.356 --> 00:19:13.756 A:middle
And you're going to want
to show a menu probably.

00:19:14.296 --> 00:19:17.256 A:middle
So to help you with
that, we have a method

00:19:17.256 --> 00:19:19.736 A:middle
that you can overwrite which is
menuForEvent and that's going

00:19:19.736 --> 00:19:22.146 A:middle
to get called if you
right click on something

00:19:22.146 --> 00:19:23.826 A:middle
or if you control click on it,

00:19:23.826 --> 00:19:26.566 A:middle
any kind of contextual
click, will give you this.

00:19:27.466 --> 00:19:30.396 A:middle
And with this, you're
going to pass back the menu

00:19:30.666 --> 00:19:31.986 A:middle
which is going to
handle the interaction.

00:19:32.616 --> 00:19:33.916 A:middle
So what about dragging?

00:19:34.166 --> 00:19:37.466 A:middle
Well, one thing you
could do is you could set

00:19:37.466 --> 00:19:38.936 A:middle
up the mouseDown
event and you're going

00:19:38.936 --> 00:19:43.786 A:middle
to record your drag start
location and your mouseDragged,

00:19:44.026 --> 00:19:46.966 A:middle
you're going to do-- you're
going to move the view and then

00:19:46.966 --> 00:19:48.536 A:middle
in the mouseUp event
you'd clean up.

00:19:48.536 --> 00:19:50.936 A:middle
And that works really
well especially it will--

00:19:50.936 --> 00:19:54.336 A:middle
I should say that works really
well if you're inside of a View.

00:19:54.336 --> 00:19:56.156 A:middle
So if you're moving
something within a View,

00:19:56.956 --> 00:19:58.136 A:middle
then that works great.

00:19:58.136 --> 00:20:00.416 A:middle
So-- and that's kind of
what you're used to in iOS.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:58.136 --> 00:20:00.416 A:middle
So-- and that's kind of
what you're used to in iOS.

00:20:01.056 --> 00:20:03.656 A:middle
But what if you wanted to do
something really fancy like,

00:20:03.896 --> 00:20:07.276 A:middle
say drag something from
one window to another

00:20:07.276 --> 00:20:09.016 A:middle
or perhaps one application
to another.

00:20:09.016 --> 00:20:09.856 A:middle
How would you do that?

00:20:10.326 --> 00:20:11.486 A:middle
Well, it's pretty simple.

00:20:11.486 --> 00:20:12.126 A:middle
I'll show you how to do it.

00:20:12.126 --> 00:20:15.956 A:middle
So you're going to use this
for mouseDown or mouseDragged

00:20:16.616 --> 00:20:19.106 A:middle
and then you're going
to set up a pasteboard

00:20:19.926 --> 00:20:21.806 A:middle
and in your pasteboard,
you're going

00:20:21.806 --> 00:20:24.046 A:middle
to clear the current pasteboard
and then you're going to pass

00:20:24.046 --> 00:20:25.876 A:middle
in the element that
you want to have--

00:20:26.636 --> 00:20:29.856 A:middle
actually, the model behind
what you want to have dragged.

00:20:29.856 --> 00:20:32.786 A:middle
In this example, we're dragging
an image, so we're going

00:20:32.836 --> 00:20:35.456 A:middle
to just pass in one
element array,

00:20:35.906 --> 00:20:39.756 A:middle
that's the new array syntax-,
and, pass in that image.

00:20:40.866 --> 00:20:44.196 A:middle
And then we're going
to call this bad boy.

00:20:44.196 --> 00:20:49.696 A:middle
dragImage at Offset event
pasteboard source slideBack.

00:20:49.956 --> 00:20:51.616 A:middle
OK. So what is all that stuff.

00:20:52.186 --> 00:20:55.606 A:middle
So, first thing is the dragImage

00:20:55.606 --> 00:20:57.516 A:middle
and that's the image
underneath the mouse pointer

00:20:57.516 --> 00:20:58.196 A:middle
as you're dragging.

00:20:58.696 --> 00:20:59.996 A:middle
The second thing you're going

00:20:59.996 --> 00:21:02.256 A:middle
to pass is the location,
the start location.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:59.996 --> 00:21:02.256 A:middle
to pass is the location,
the start location.

00:21:02.786 --> 00:21:05.086 A:middle
And the dragOffset
actually is ignored

00:21:05.086 --> 00:21:07.886 A:middle
so let's not talk
about that anymore.

00:21:07.886 --> 00:21:12.866 A:middle
The event is the mouseDown
event that you've been passed in

00:21:12.866 --> 00:21:15.806 A:middle
or mouseDragged event
and only use this

00:21:15.806 --> 00:21:17.276 A:middle
with mouseDown and mouseDragged.

00:21:18.076 --> 00:21:19.876 A:middle
The documentation-- by the
way, if there's anything here

00:21:19.876 --> 00:21:22.006 A:middle
that I'm saying, go look
at the documentations,

00:21:22.006 --> 00:21:22.716 A:middle
it's got all the stuff.

00:21:22.746 --> 00:21:24.526 A:middle
But I'm just pointing you
in the right direction here.

00:21:25.046 --> 00:21:28.136 A:middle
Pasteboard, so the pasteboard
is what you just set up there,

00:21:28.136 --> 00:21:30.186 A:middle
the source is self
and then slideBack.

00:21:30.186 --> 00:21:34.076 A:middle
That's when if the user cancels
then whether it slides back

00:21:34.076 --> 00:21:35.546 A:middle
in the place, a little
cool animation there.

00:21:35.976 --> 00:21:37.826 A:middle
So you can put yes or no there.

00:21:38.386 --> 00:21:40.586 A:middle
OK. So, now that we've
talked about the view,

00:21:41.266 --> 00:21:42.646 A:middle
let's take a look
at the controller.

00:21:42.646 --> 00:21:46.416 A:middle
Now, the controller is the part

00:21:46.416 --> 00:21:50.106 A:middle
of your Model-View-Controller
system that handles user input.

00:21:50.106 --> 00:21:54.876 A:middle
And it's going to mediate that
input and send it to commands

00:21:54.876 --> 00:21:56.296 A:middle
for the Model or View to handle.

00:21:56.976 --> 00:21:59.726 A:middle
So, what do we do--
what are some tips

00:21:59.726 --> 00:22:00.826 A:middle
for migrating the controller?

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:59.726 --> 00:22:00.826 A:middle
for migrating the controller?

00:22:01.026 --> 00:22:04.776 A:middle
First off, this is the common
mistake, UIViewController.

00:22:04.826 --> 00:22:06.276 A:middle
There is an NSViewController

00:22:06.276 --> 00:22:07.726 A:middle
but it's probably not
what you're looking for.

00:22:07.846 --> 00:22:10.416 A:middle
You probably want to use
NSWindowController instead

00:22:10.496 --> 00:22:12.736 A:middle
which is a lot more similar
to the UIVIewController.

00:22:12.736 --> 00:22:15.346 A:middle
So, look there if you want that.

00:22:16.106 --> 00:22:19.546 A:middle
And a lot of you may be using
or I would say almost all

00:22:19.546 --> 00:22:22.346 A:middle
of you are using
UINavigationControllers.

00:22:22.886 --> 00:22:25.376 A:middle
There is no such thing as
an NSNavigationController.

00:22:26.136 --> 00:22:28.186 A:middle
And the reason-- now you
think about that for a second.

00:22:28.576 --> 00:22:30.906 A:middle
UINavigationController,
what does it do?

00:22:31.366 --> 00:22:33.826 A:middle
Well, it allows you to
navigate between lots

00:22:33.826 --> 00:22:36.566 A:middle
of different TableViews that are
stacked on top of each other.

00:22:36.566 --> 00:22:37.986 A:middle
And why do we stack them
on top of each other?

00:22:37.986 --> 00:22:39.286 A:middle
Because we have a 4-inch screen.

00:22:39.636 --> 00:22:41.696 A:middle
So, we don't really
need that on OS X.

00:22:41.696 --> 00:22:44.356 A:middle
In any case, it doesn't exist
on OS X so you're going to have

00:22:44.356 --> 00:22:45.276 A:middle
to find some alternative.

00:22:45.926 --> 00:22:47.786 A:middle
But it's not the right
interaction anyway.

00:22:47.786 --> 00:22:51.986 A:middle
So, the next thing that we
want to point out is Bindings.

00:22:51.986 --> 00:22:54.526 A:middle
Bindings is going to really help
you out here with controllers

00:22:55.266 --> 00:22:58.866 A:middle
because bindings is a way
on OS X that you can wire

00:22:58.866 --> 00:23:03.536 A:middle
up your user interface
without using any code inside

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:58.866 --> 00:23:03.536 A:middle
up your user interface
without using any code inside

00:23:03.536 --> 00:23:04.356 A:middle
of Interface Builder.

00:23:04.356 --> 00:23:05.086 A:middle
So that's pretty cool.

00:23:06.166 --> 00:23:10.086 A:middle
OK. Next, NSDocument,
NSDocument is amazing.

00:23:11.676 --> 00:23:13.986 A:middle
It allows you to do some really
cool stuff and it's going

00:23:13.986 --> 00:23:16.526 A:middle
to really reduce the
amount of controller code

00:23:16.526 --> 00:23:17.276 A:middle
that you have to write.

00:23:18.706 --> 00:23:21.486 A:middle
And you may be thinking,
"NSDocument, that sounds like--

00:23:21.556 --> 00:23:23.156 A:middle
is that similar to UIDocument?"

00:23:23.156 --> 00:23:24.136 A:middle
Well, yes it is.

00:23:25.386 --> 00:23:27.446 A:middle
In fact, they have a
lot of similarities.

00:23:27.846 --> 00:23:30.526 A:middle
Both of them are responsible
for saving and loading,

00:23:31.576 --> 00:23:35.246 A:middle
both of them will give you undo
support very, very cheaply,

00:23:36.156 --> 00:23:38.086 A:middle
and both of them are
your tickets to iCloud.

00:23:38.676 --> 00:23:41.836 A:middle
So if you want to get to
iCloud, adopt UIDocument

00:23:41.836 --> 00:23:45.046 A:middle
or NSDocument or both really.

00:23:45.466 --> 00:23:48.706 A:middle
And-- but there's
some differences

00:23:48.706 --> 00:23:50.476 A:middle
between NSDocument
and UIDocument.

00:23:50.476 --> 00:23:53.726 A:middle
NSDocument has some extras,
some real nice things

00:23:53.726 --> 00:23:55.486 A:middle
that you should take
advantage of.

00:23:55.996 --> 00:23:58.296 A:middle
You'll get for free
really most of them.

00:23:58.296 --> 00:23:59.646 A:middle
One of them is that
you're going to get--

00:23:59.646 --> 00:24:01.866 A:middle
if you set up a document-based
app on OS X, you're going

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:59.646 --> 00:24:01.866 A:middle
if you set up a document-based
app on OS X, you're going

00:24:01.866 --> 00:24:04.306 A:middle
to get a File, Edit, and
Windows menu for free

00:24:04.686 --> 00:24:08.246 A:middle
and they're almost entirely work
without any code on your part.

00:24:08.816 --> 00:24:11.876 A:middle
You're going to get open
panels and save sheets.

00:24:13.006 --> 00:24:17.086 A:middle
And, you know, when you quit
your app and you haven't saved,

00:24:17.186 --> 00:24:18.636 A:middle
you get that little
dialogue that comes down,

00:24:18.636 --> 00:24:20.466 A:middle
that's for free, you'll
get that, unless you turn

00:24:20.466 --> 00:24:22.446 A:middle
on auto-save and then,
you don't really need it.

00:24:23.026 --> 00:24:25.956 A:middle
But if you turn on
auto-save, you get Versions.

00:24:26.416 --> 00:24:30.186 A:middle
Yes, you're going to get this
cool UI, a time machine UI right

00:24:30.186 --> 00:24:34.096 A:middle
within your app, that allows
you to compare one version

00:24:34.096 --> 00:24:35.206 A:middle
of your file with another one.

00:24:35.436 --> 00:24:36.356 A:middle
So that's really cool.

00:24:36.356 --> 00:24:39.396 A:middle
And there's a really a lot
more that NSDocument can do.

00:24:39.396 --> 00:24:42.946 A:middle
So, check out the
documentation for NSDocuments.

00:24:43.986 --> 00:24:47.026 A:middle
OK. So, I'm going to
bring Dan Schimpf on stage

00:24:47.026 --> 00:24:49.026 A:middle
and we've been talking a lot
in abstract and he's going

00:24:49.026 --> 00:24:52.246 A:middle
to show you an iOS
app that we're going

00:24:52.246 --> 00:24:53.316 A:middle
to bring to OS X in a second.

00:24:53.446 --> 00:24:55.156 A:middle
So, take it away, Dan.

00:24:55.606 --> 00:24:57.606 A:middle
[applause]

00:24:58.056 --> 00:24:59.536 A:middle
&gt;&gt; Hi, good morning.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:00.066 --> 00:25:02.546 A:middle
OK. I'm going to show you--
I'm first going to start off

00:25:02.546 --> 00:25:06.636 A:middle
with my awesome iOS application
that I'm working on some

00:25:06.636 --> 00:25:08.886 A:middle
into the store, and it's a
simple graphics application.

00:25:09.446 --> 00:25:13.416 A:middle
And what we can do here is
just tap and make a few shapes.

00:25:15.706 --> 00:25:18.946 A:middle
So, I can also change
what size I want to make

00:25:19.196 --> 00:25:20.516 A:middle
or what shape I'm going to make.

00:25:20.776 --> 00:25:22.926 A:middle
I can drag-- even drag it
around and put that around top

00:25:22.926 --> 00:25:25.906 A:middle
of there, like do
three whole shapes.

00:25:27.206 --> 00:25:32.846 A:middle
You can even change the
color, sure, let's do that.

00:25:33.396 --> 00:25:35.886 A:middle
So now look I have a nice little
picture of a house with my--

00:25:35.886 --> 00:25:37.366 A:middle
this is what my house
looks like.

00:25:37.976 --> 00:25:40.526 A:middle
OK. So, that's just a demo.

00:25:40.526 --> 00:25:43.196 A:middle
That's my brand new application
but I'm thinking I want

00:25:43.196 --> 00:25:45.776 A:middle
to bring this application
to OS X.

00:25:47.406 --> 00:25:49.386 A:middle
So, I'm going to open the
project here and let's just go

00:25:49.386 --> 00:25:50.506 A:middle
through some of the code.

00:25:50.816 --> 00:25:53.756 A:middle
So, as you can see I've
already separated my code

00:25:53.756 --> 00:25:56.286 A:middle
out into a Model
View and Controller.

00:25:56.926 --> 00:25:58.726 A:middle
So this is my document model.

00:25:59.056 --> 00:26:02.056 A:middle
Don't need to go through a whole
lot of this right now but it--

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:59.056 --> 00:26:02.056 A:middle
Don't need to go through a whole
lot of this right now but it--

00:26:02.296 --> 00:26:04.166 A:middle
but the important thing
is that a lot of it--

00:26:04.636 --> 00:26:06.346 A:middle
this is all things that
are cross-platform.

00:26:06.346 --> 00:26:10.606 A:middle
It imports foundation, things
that are on both platforms.

00:26:10.606 --> 00:26:14.596 A:middle
And the view side, I have the
document view itself, the thing,

00:26:14.596 --> 00:26:17.946 A:middle
the canvas, and then I have
the shape view which is--

00:26:18.236 --> 00:26:20.216 A:middle
stand for each of
these individual shapes

00:26:20.216 --> 00:26:21.136 A:middle
that I can drag around.

00:26:21.626 --> 00:26:22.986 A:middle
And then on the controller side,

00:26:24.036 --> 00:26:27.366 A:middle
I have a standard controller
hierarchy, an app delegate,

00:26:27.366 --> 00:26:29.266 A:middle
and then I have adopted
UIDocument because I want

00:26:29.376 --> 00:26:31.896 A:middle
to bring this to iPod and win
an Apple design award next year.

00:26:32.776 --> 00:26:35.246 A:middle
And then I've got a view
controller for the view

00:26:35.246 --> 00:26:37.366 A:middle
that I see and then
two controllers

00:26:37.366 --> 00:26:40.706 A:middle
for the things that pop up.

00:26:40.966 --> 00:26:42.326 A:middle
So, this is all pretty standard.

00:26:42.326 --> 00:26:45.456 A:middle
And now I want to start
on bringing this to OS X.

00:26:45.726 --> 00:26:46.646 A:middle
So what's the first thing I do?

00:26:46.646 --> 00:26:49.976 A:middle
Well, the first thing I'm going
to do is just make a new target.

00:26:49.976 --> 00:26:53.546 A:middle
So I'm going to make
an OS X application,

00:26:54.086 --> 00:26:55.306 A:middle
so the Cocoa application.

00:26:56.116 --> 00:26:58.636 A:middle
I'm going to make
this Shape Art OS X.

00:26:58.636 --> 00:26:59.786 A:middle
You don't have to call it--

00:26:59.866 --> 00:27:03.246 A:middle
if you don't have the OS X
at the end, I'm just going

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:59.866 --> 00:27:03.246 A:middle
if you don't have the OS X
at the end, I'm just going

00:27:03.496 --> 00:27:06.766 A:middle
to say OS X just so there's
no confusion during this demo.

00:27:06.926 --> 00:27:09.116 A:middle
And I'm also going to make a
document-based application.

00:27:11.916 --> 00:27:15.616 A:middle
So, you can see this is
made a target for me.

00:27:16.006 --> 00:27:18.866 A:middle
And also because I know this is
a heavy graphics application,

00:27:18.866 --> 00:27:20.096 A:middle
I'm also going to
add a framework.

00:27:20.096 --> 00:27:25.996 A:middle
I can search the Quartz
framework and it knows

00:27:25.996 --> 00:27:27.426 A:middle
that this is an OS X
target so it's going

00:27:27.426 --> 00:27:30.426 A:middle
to only give me the OS
X version of Quartz.

00:27:31.656 --> 00:27:34.796 A:middle
OK. So now, I have
this basic app

00:27:34.796 --> 00:27:38.856 A:middle
and because I've separated my
model cleanly, I can select all

00:27:38.856 --> 00:27:42.176 A:middle
of the model classes and just
simply add them into my--

00:27:42.176 --> 00:27:46.386 A:middle
excuse me, add them
to my OS X target.

00:27:46.386 --> 00:27:51.046 A:middle
Now, if I switch to my OS X
target, I can actually build

00:27:51.336 --> 00:27:53.516 A:middle
and run and see what it gets me.

00:27:53.746 --> 00:27:57.476 A:middle
So here we have-- this
is what you get for free.

00:27:57.596 --> 00:27:59.396 A:middle
You get a whole-- you have
windows, you can make--

00:27:59.396 --> 00:28:00.336 A:middle
I can make many of them,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:59.396 --> 00:28:00.336 A:middle
I can make many of them,

00:28:01.336 --> 00:28:05.466 A:middle
I got all of the menu bar
items that actually work.

00:28:05.466 --> 00:28:08.366 A:middle
And I probably don't
want to shift with

00:28:08.366 --> 00:28:11.996 A:middle
"my document contents there"
but it's a good starting point

00:28:11.996 --> 00:28:16.436 A:middle
that you get for free and then
you can adapt it from there.

00:28:16.596 --> 00:28:18.536 A:middle
So I'm going to hand
it back to Cortis,

00:28:18.536 --> 00:28:19.686 A:middle
he's going to talk
more about that part.

00:28:20.736 --> 00:28:21.186 A:middle
&gt;&gt; Thanks, Dan.

00:28:22.216 --> 00:28:23.646 A:middle
So, awesome.

00:28:23.646 --> 00:28:27.546 A:middle
So we have this app and it does
some really cool things like

00:28:27.716 --> 00:28:28.476 A:middle
"your documents here".

00:28:28.856 --> 00:28:31.756 A:middle
But we don't have--
where's our colors?

00:28:31.756 --> 00:28:33.126 A:middle
Where's our little shapes?

00:28:33.506 --> 00:28:34.356 A:middle
So let's talk about--

00:28:34.356 --> 00:28:37.046 A:middle
we're going to talk about
some migration strategies.

00:28:37.466 --> 00:28:40.146 A:middle
They're going to help you move
over your view and controller

00:28:40.146 --> 00:28:42.326 A:middle
because we've only moved
over the model at this point.

00:28:43.096 --> 00:28:46.196 A:middle
Now keep in mind, this is kind
of a toolbox of approaches.

00:28:46.196 --> 00:28:47.836 A:middle
We're going to give you a
bunch of different approaches.

00:28:48.256 --> 00:28:52.126 A:middle
You know your code so you should
decide what's the right approach

00:28:52.126 --> 00:28:53.146 A:middle
for which situation.

00:28:53.346 --> 00:28:56.016 A:middle
And your apps may
use several of these.

00:28:56.566 --> 00:29:02.186 A:middle
And so to help with this, we're
going to talk about it in terms

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:56.566 --> 00:29:02.186 A:middle
And so to help with this, we're
going to talk about it in terms

00:29:02.306 --> 00:29:03.836 A:middle
of a particular example.

00:29:04.196 --> 00:29:06.726 A:middle
In this case, we're going to
talk about it in terms of color.

00:29:07.856 --> 00:29:11.496 A:middle
Now, on iOS, you may all
be familiar with UIColor.

00:29:11.656 --> 00:29:15.516 A:middle
It's a relatively simple class,
it allows you to create colors

00:29:15.886 --> 00:29:18.206 A:middle
with red, green, blue,
and alpha, and allows you

00:29:18.206 --> 00:29:20.306 A:middle
to set them on the
current context.

00:29:21.056 --> 00:29:25.236 A:middle
Now, it turns out that there's
another class on OS X called,

00:29:25.616 --> 00:29:29.286 A:middle
surprisingly enough,
NSColor, and it allows you

00:29:29.506 --> 00:29:31.836 A:middle
to create a color with red,
green, blue, and alpha and set

00:29:31.836 --> 00:29:32.906 A:middle
in on the current context.

00:29:32.906 --> 00:29:34.566 A:middle
Now, NSColor does
some other cool things

00:29:34.566 --> 00:29:36.696 A:middle
like it will allow you to
set up seem like CMYK colors

00:29:36.696 --> 00:29:38.916 A:middle
and patterns, color spaces.

00:29:39.126 --> 00:29:41.736 A:middle
But for now, let's just
focus on those two things.

00:29:42.646 --> 00:29:48.906 A:middle
OK. So, if were overwriting
code that we're using UIColor,

00:29:48.906 --> 00:29:49.966 A:middle
I might do something like this.

00:29:50.006 --> 00:29:53.056 A:middle
UIColor redColor, that's going
to make a new color for me,

00:29:53.486 --> 00:29:56.886 A:middle
and then your color,
aColor dot set.

00:29:56.886 --> 00:29:58.526 A:middle
So that's going to set
on the current context.

00:29:58.726 --> 00:29:59.246 A:middle
Pretty simple.

00:29:59.906 --> 00:30:04.856 A:middle
On OS X it might look like this
and the only difference here is

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:59.906 --> 00:30:04.856 A:middle
On OS X it might look like this
and the only difference here is

00:30:04.856 --> 00:30:08.786 A:middle
that we have a different class
name in place of the UIColor.

00:30:09.546 --> 00:30:12.346 A:middle
Now, this is what we're going to
call the mirrored code strategy

00:30:13.276 --> 00:30:16.836 A:middle
and for purposes of talking
about it, I don't know

00:30:16.836 --> 00:30:18.656 A:middle
if it's really officially
called that

00:30:19.196 --> 00:30:20.366 A:middle
but we're going to call that.

00:30:20.366 --> 00:30:23.606 A:middle
Now, just to show you a little
bit more what that might look

00:30:23.606 --> 00:30:26.456 A:middle
like in a more complicated case,
let's look at this next one.

00:30:26.796 --> 00:30:28.116 A:middle
This is not with colors.

00:30:28.396 --> 00:30:30.026 A:middle
Now, There's a fair bit of code

00:30:30.026 --> 00:30:32.036 A:middle
so let me explain
what it's doing.

00:30:32.426 --> 00:30:35.896 A:middle
It going to create a new
view, it's going to center it

00:30:35.896 --> 00:30:37.466 A:middle
on its parent view
and then it's going

00:30:37.466 --> 00:30:40.586 A:middle
to insert it underneath all of
the other views on that view.

00:30:40.966 --> 00:30:43.376 A:middle
OK. So this first
bit of code is going

00:30:43.376 --> 00:30:45.666 A:middle
to compute the new
origin, the new X and Y.

00:30:45.666 --> 00:30:48.726 A:middle
And we did that with a little
bit of math and it turns

00:30:48.726 --> 00:30:51.136 A:middle
out that the math for OS
X is going to be the same.

00:30:51.786 --> 00:30:53.186 A:middle
So that part of the
code is the same.

00:30:54.036 --> 00:30:56.036 A:middle
And then we're going to
create the view itself.

00:30:56.286 --> 00:31:00.466 A:middle
We'll make the frame, the
CGRect frame, and we're going

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:56.286 --> 00:31:00.466 A:middle
We'll make the frame, the
CGRect frame, and we're going

00:31:00.466 --> 00:31:01.856 A:middle
to create it with initWithFrame.

00:31:02.816 --> 00:31:05.596 A:middle
And if you notice, the
OS X code is very similar

00:31:05.596 --> 00:31:06.986 A:middle
but there's a couple of changes.

00:31:06.986 --> 00:31:09.516 A:middle
One is that we're using an
NSRect instead of CGRect,

00:31:10.426 --> 00:31:15.636 A:middle
and we also are using an NSView
instead of a UIView, so--

00:31:15.636 --> 00:31:17.266 A:middle
but very similar at this point.

00:31:17.266 --> 00:31:18.956 A:middle
And then for this last bit,

00:31:19.206 --> 00:31:21.666 A:middle
we're going to insert it
underneath all the other views

00:31:21.796 --> 00:31:22.386 A:middle
on that view.

00:31:22.636 --> 00:31:25.146 A:middle
So this is subview, so
all of the other subviews.

00:31:25.916 --> 00:31:28.976 A:middle
And we use insertSubview
atIndex on iOS.

00:31:29.746 --> 00:31:33.246 A:middle
On OS X, we don't actually
have that API so in that case,

00:31:33.246 --> 00:31:35.306 A:middle
we're going to have
to call addSubview,

00:31:35.306 --> 00:31:36.666 A:middle
positioned, relativeTo.

00:31:37.126 --> 00:31:39.906 A:middle
And so what that does is it--
we're going to add the subview

00:31:40.726 --> 00:31:43.126 A:middle
which is the one that we just
made, and then we're going

00:31:43.126 --> 00:31:45.646 A:middle
to position it with
NSWindowBelow

00:31:45.886 --> 00:31:47.426 A:middle
and that's we below something.

00:31:47.876 --> 00:31:50.476 A:middle
And since we're passing
nil for our relativeTo,

00:31:50.476 --> 00:31:51.686 A:middle
it's going to be
below everything.

00:31:51.686 --> 00:31:53.446 A:middle
So it does the same
thing as the iOS code.

00:31:53.946 --> 00:31:56.346 A:middle
OK. So that's the
mirrored code strategy.

00:31:56.826 --> 00:31:57.966 A:middle
What are some of the benefits?

00:31:57.966 --> 00:32:00.416 A:middle
Well, it's going to give
us a lot of flexibility.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:57.966 --> 00:32:00.416 A:middle
Well, it's going to give
us a lot of flexibility.

00:32:00.886 --> 00:32:02.776 A:middle
So we're going to
have things on iOS,

00:32:03.386 --> 00:32:04.886 A:middle
we're going to write our
code completely different

00:32:04.886 --> 00:32:05.736 A:middle
on iOS from OS X.

00:32:05.736 --> 00:32:07.356 A:middle
In fact it can give you
something completely different.

00:32:07.396 --> 00:32:12.856 A:middle
So that's kind of cool but
it has some downsides, right?

00:32:14.396 --> 00:32:17.756 A:middle
There's code duplication
there which means

00:32:17.756 --> 00:32:20.856 A:middle
that whenever we want to change
something on the iOS side,

00:32:20.856 --> 00:32:23.186 A:middle
let' say add a feature
or fix a bug,

00:32:24.096 --> 00:32:26.446 A:middle
it's going to require a
change on the OS X side.

00:32:26.846 --> 00:32:29.286 A:middle
So there's greater maintenance
cost and greater testing cost.

00:32:29.286 --> 00:32:30.646 A:middle
So when do we use this strategy?

00:32:30.646 --> 00:32:31.576 A:middle
Is it ever appropriate?

00:32:31.866 --> 00:32:34.486 A:middle
The answer is yes, it is,
sometimes appropriate.

00:32:34.986 --> 00:32:37.476 A:middle
When you're using heavily
platform dependent code,

00:32:37.476 --> 00:32:39.666 A:middle
when there's stuff that's
really just very different

00:32:39.666 --> 00:32:42.076 A:middle
between the two, then this
might be the right approach.

00:32:42.406 --> 00:32:44.326 A:middle
But there are some other
approaches that we can take.

00:32:44.726 --> 00:32:47.366 A:middle
So let's take a look at those.

00:32:47.366 --> 00:32:50.946 A:middle
One thing that we can do is
that, it turns out that UIKit

00:32:51.436 --> 00:32:54.336 A:middle
and AppKit are actually built
upon a common framework.

00:32:54.936 --> 00:32:56.776 A:middle
And so, we can drop down
to that lower framework.

00:32:57.336 --> 00:33:00.506 A:middle
And it turns out that
that will give us code

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:57.336 --> 00:33:00.506 A:middle
And it turns out that
that will give us code

00:33:00.506 --> 00:33:02.726 A:middle
that is cross-platform
out of the box.

00:33:02.726 --> 00:33:04.006 A:middle
Let's look at some code.

00:33:04.636 --> 00:33:06.796 A:middle
Here we're dropping down
to the Core Image framework

00:33:06.796 --> 00:33:10.776 A:middle
and it turns out that Core
Image has a CIColor there

00:33:11.956 --> 00:33:14.506 A:middle
and CIColor has a color
with red, green, blue,

00:33:14.506 --> 00:33:15.986 A:middle
alpha so we can create
a red color.

00:33:16.826 --> 00:33:19.176 A:middle
And in this case, we're
actually going to--

00:33:19.396 --> 00:33:20.656 A:middle
we're not setting on
the current context.

00:33:20.656 --> 00:33:22.366 A:middle
We're creating an image with
that color because that's one

00:33:22.366 --> 00:33:24.416 A:middle
of the things that Core
Image would want to do.

00:33:24.886 --> 00:33:27.256 A:middle
And so, that's the code
there for doing that.

00:33:27.826 --> 00:33:30.596 A:middle
Now, some benefits
to using this--

00:33:31.436 --> 00:33:33.726 A:middle
since lower level
frameworks are cross-platform,

00:33:34.006 --> 00:33:38.116 A:middle
we're going to get-- we're going
to maximize our code reuse.

00:33:38.686 --> 00:33:41.486 A:middle
It's very robust and there's
a lot less maintenance

00:33:41.486 --> 00:33:43.776 A:middle
because we only have one
set of code to deal with

00:33:43.776 --> 00:33:46.126 A:middle
and with the interface
is common so all

00:33:46.126 --> 00:33:48.186 A:middle
of our code calling this
is going to be the same.

00:33:48.496 --> 00:33:50.186 A:middle
There are some downsides.

00:33:50.756 --> 00:33:53.526 A:middle
For one thing, it's going to
require that you rewrite a bunch

00:33:53.526 --> 00:33:56.906 A:middle
of your code and
perhaps most importantly,

00:33:56.906 --> 00:33:58.846 A:middle
and I want to stress
this, you're losing a lot

00:33:58.846 --> 00:34:01.166 A:middle
of functionality by dropping
to the low level framework.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:58.846 --> 00:34:01.166 A:middle
of functionality by dropping
to the low level framework.

00:34:01.166 --> 00:34:04.296 A:middle
There's a reason why
we're making NSColor

00:34:04.406 --> 00:34:06.626 A:middle
and UIColor available.

00:34:07.126 --> 00:34:09.246 A:middle
And it's not just to
like duplicate work.

00:34:09.835 --> 00:34:12.056 A:middle
So, because, you know,

00:34:12.146 --> 00:34:14.386 A:middle
and CIColor doesn't
handle color spaces,

00:34:14.386 --> 00:34:16.676 A:middle
it won't do CMYK color,
it won't do patterns.

00:34:17.016 --> 00:34:18.505 A:middle
So, these are all things
that you're going to lose.

00:34:18.505 --> 00:34:20.876 A:middle
If you ever think that
you're going to need that,

00:34:20.876 --> 00:34:22.696 A:middle
then probably not
the right strategy.

00:34:22.696 --> 00:34:23.786 A:middle
So when do you use this?

00:34:24.085 --> 00:34:26.295 A:middle
It's when the lower level
framework provides the needed

00:34:26.295 --> 00:34:29.005 A:middle
functionality that you need,
for now and in the future.

00:34:29.106 --> 00:34:31.926 A:middle
So look at it and say "Hey,
is this an appropriate match?"

00:34:32.326 --> 00:34:35.326 A:middle
And if it's not, then let's
look at some other strategies.

00:34:35.496 --> 00:34:38.966 A:middle
OK. So, from software
engineering, if any of you took

00:34:38.966 --> 00:34:40.815 A:middle
that in college,
you may be familiar

00:34:40.815 --> 00:34:42.076 A:middle
with the adapter pattern.

00:34:42.976 --> 00:34:45.295 A:middle
The idea here is that we
have some common source

00:34:45.295 --> 00:34:46.956 A:middle
and it's already targeting iOS.

00:34:48.025 --> 00:34:52.755 A:middle
And the code is already
written so we don't really have

00:34:52.755 --> 00:34:53.666 A:middle
to do anything on iOS.

00:34:53.666 --> 00:34:57.476 A:middle
But what if we made the OS
X code work the same way?

00:34:57.476 --> 00:34:59.196 A:middle
So we could stick
an adapter in there

00:34:59.836 --> 00:35:04.156 A:middle
and that would give us the same
interface for iOS and OS X.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:59.836 --> 00:35:04.156 A:middle
and that would give us the same
interface for iOS and OS X.

00:35:04.156 --> 00:35:06.506 A:middle
And let me just modify
this slightly.

00:35:06.506 --> 00:35:08.746 A:middle
We're going to make this
a little bit different.

00:35:08.746 --> 00:35:11.236 A:middle
I want to make that
adapter actually

00:35:11.236 --> 00:35:12.906 A:middle
across both iOS and OS X?

00:35:12.906 --> 00:35:15.666 A:middle
So if we do this, it will take
a little bit of extra code

00:35:15.666 --> 00:35:19.586 A:middle
but it means that our iOS
code-- sorry, the iOS framework

00:35:19.586 --> 00:35:23.676 A:middle
and the OS X framework can
change and it doesn't matter

00:35:23.676 --> 00:35:26.836 A:middle
because our code, our adapter
code can stay the same.

00:35:26.836 --> 00:35:29.376 A:middle
And so, the code that's calling
it doesn't need to change.

00:35:30.156 --> 00:35:33.676 A:middle
And so, we can just
change the implementation.

00:35:33.756 --> 00:35:35.576 A:middle
So that's actually
a nice approach.

00:35:36.486 --> 00:35:38.176 A:middle
And it would look
like this in code.

00:35:38.816 --> 00:35:41.026 A:middle
Perhaps, this is
a very simplified,

00:35:41.026 --> 00:35:42.436 A:middle
just the header file
version of it

00:35:42.756 --> 00:35:45.546 A:middle
and without all the interfaces

00:35:45.546 --> 00:35:47.976 A:middle
that you would need
for various things.

00:35:47.976 --> 00:35:48.966 A:middle
But this gives you an idea.

00:35:49.286 --> 00:35:52.926 A:middle
We created class
called XPlatformColor

00:35:53.406 --> 00:35:56.306 A:middle
and we'd base it off of
NSObject, and underneath

00:35:56.306 --> 00:36:00.656 A:middle
that class, we would place a
UIColor as the underlying color.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:56.306 --> 00:36:00.656 A:middle
that class, we would place a
UIColor as the underlying color.

00:36:00.716 --> 00:36:04.496 A:middle
And so, whenever we need to
do something on the color,

00:36:04.496 --> 00:36:07.566 A:middle
we'd actually call through
to iOS to do that for us

00:36:07.566 --> 00:36:11.006 A:middle
so we wouldn't have to
duplicate that code.

00:36:11.006 --> 00:36:13.196 A:middle
And on OS X, we could put
this in a separate file.

00:36:13.196 --> 00:36:14.736 A:middle
In this case, we're
putting it in on one slide

00:36:14.736 --> 00:36:16.266 A:middle
so we use the condition--

00:36:16.266 --> 00:36:20.336 A:middle
the cross-platform macros
that we talked about earlier.

00:36:20.886 --> 00:36:24.536 A:middle
But in this case, we're
going to base XPlatformColor

00:36:24.536 --> 00:36:26.236 A:middle
on the underlying
color of NSColor.

00:36:26.946 --> 00:36:28.876 A:middle
So that's what that
would look like.

00:36:29.016 --> 00:36:30.316 A:middle
So what are the benefits
of that?

00:36:30.556 --> 00:36:31.446 A:middle
And so you're going to have to--

00:36:31.446 --> 00:36:35.146 A:middle
by the way, this is doing
some hand waving on the rest

00:36:35.146 --> 00:36:37.656 A:middle
of the interface because you're
going to have things like color

00:36:37.656 --> 00:36:39.836 A:middle
with red, green, blue, alpha
perhaps, or a red color

00:36:39.836 --> 00:36:41.706 A:middle
or whatever you want to
have as your interface.

00:36:41.706 --> 00:36:42.456 A:middle
You can choose, right?

00:36:42.456 --> 00:36:43.856 A:middle
This is your class
that you're making.

00:36:44.436 --> 00:36:46.246 A:middle
So what are the benefits
of that?

00:36:46.246 --> 00:36:48.166 A:middle
Well, one thing, you're
going to be flexible again,

00:36:48.836 --> 00:36:50.516 A:middle
a lot more flexible
than mirrored code.

00:36:50.516 --> 00:36:53.386 A:middle
You're going to maximize
your code reuse.

00:36:53.386 --> 00:36:56.456 A:middle
This is a lot more reuse
than mirrored code.

00:36:57.386 --> 00:36:57.886 A:middle
Why is that?

00:36:57.886 --> 00:36:59.196 A:middle
Because your interface
is the same.

00:36:59.296 --> 00:37:01.056 A:middle
So any place that you need
to color, you're going

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:59.296 --> 00:37:01.056 A:middle
So any place that you need
to color, you're going

00:37:01.056 --> 00:37:02.026 A:middle
to call XPlatformColor.

00:37:02.026 --> 00:37:04.586 A:middle
And all of your platform
specific stuff is hidden

00:37:04.586 --> 00:37:07.086 A:middle
underneath an implementation
of the XPlatformColor code.

00:37:07.166 --> 00:37:08.216 A:middle
So that's nice.

00:37:08.806 --> 00:37:10.796 A:middle
It's a simplified interface
because you're making it.

00:37:10.796 --> 00:37:12.886 A:middle
It's tailor-made for
you, so that's great.

00:37:12.886 --> 00:37:16.656 A:middle
And it requires less maintenance
because, again, you're--

00:37:16.816 --> 00:37:20.156 A:middle
you have a common interface and
unlike mirrored code where you,

00:37:20.366 --> 00:37:22.216 A:middle
you know, you want to change
something, you had to change

00:37:22.216 --> 00:37:23.536 A:middle
in all different places.

00:37:23.836 --> 00:37:24.706 A:middle
So that's great.

00:37:25.596 --> 00:37:27.586 A:middle
The downsides are, it
has some downsides,

00:37:27.916 --> 00:37:30.106 A:middle
it's a lot of additional
code that you got to write.

00:37:30.656 --> 00:37:36.166 A:middle
So-- and so, there's going to
be another strategy we can talk

00:37:36.166 --> 00:37:38.416 A:middle
about next that has a little
bit less code, so, anyway.

00:37:38.646 --> 00:37:39.506 A:middle
When do you use this?

00:37:39.606 --> 00:37:42.176 A:middle
Well, you use this
when you're dealing

00:37:42.176 --> 00:37:45.486 A:middle
with an underlying API that's
significantly different

00:37:46.286 --> 00:37:47.526 A:middle
between iOS and OS X.

00:37:47.526 --> 00:37:49.086 A:middle
And this is a great
pattern for that.

00:37:49.086 --> 00:37:50.886 A:middle
OK. So, this is a
great strategy.

00:37:51.536 --> 00:37:52.406 A:middle
What about another strategy?

00:37:52.406 --> 00:37:55.966 A:middle
OK. So here's one that we can
take advantage of in some cases

00:37:55.966 --> 00:37:59.406 A:middle
and that is the adapter
pattern using #define.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:00.366 --> 00:38:02.646 A:middle
Now, #define is the
pre-processor macro

00:38:03.166 --> 00:38:05.736 A:middle
that in this case is, what
we're going to do is we're going

00:38:05.736 --> 00:38:08.996 A:middle
to substitute every occurrence
of XPlatformColor with UIColor.

00:38:08.996 --> 00:38:11.156 A:middle
And we're doing that before
the compiler ever gets to it.

00:38:11.456 --> 00:38:14.796 A:middle
So this happens before
compile time and that's going

00:38:14.796 --> 00:38:16.976 A:middle
to have some cool
advantages for that.

00:38:16.976 --> 00:38:20.176 A:middle
And for OS X, we would
substitute that with NSColor.

00:38:20.176 --> 00:38:22.376 A:middle
So every time we
see XPlatformColor,

00:38:22.376 --> 00:38:23.736 A:middle
it's an automatically
insert that.

00:38:24.466 --> 00:38:28.656 A:middle
Now, what does that do for us
and what is it not do to us?

00:38:28.656 --> 00:38:29.436 A:middle
There's a couple of things.

00:38:29.616 --> 00:38:32.476 A:middle
For one thing, there's
almost no new code to write.

00:38:32.476 --> 00:38:33.686 A:middle
You saw it there, that's it.

00:38:34.226 --> 00:38:35.916 A:middle
OK. So, that's nice.

00:38:35.916 --> 00:38:38.646 A:middle
It's going to give you
compile time air checking.

00:38:38.646 --> 00:38:42.076 A:middle
So because it's doing it before
the compiler ever gets to it,

00:38:42.356 --> 00:38:45.616 A:middle
it will tell you if you're using
it wrong, the compiler will.

00:38:46.016 --> 00:38:48.856 A:middle
So if you're using a selector
that's not appropriate,

00:38:49.166 --> 00:38:50.806 A:middle
it's going to tell you that.

00:38:51.696 --> 00:38:56.346 A:middle
Now, there's some downsides
and the first one is key.

00:38:56.346 --> 00:38:57.336 A:middle
Everyone pay attention.

00:38:57.636 --> 00:38:59.596 A:middle
This is only for
supported classes.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:39:00.016 --> 00:39:00.836 A:middle
Let me say that again.

00:39:00.836 --> 00:39:02.536 A:middle
Only for supported classes.

00:39:02.536 --> 00:39:03.566 A:middle
So what are those classes?

00:39:04.846 --> 00:39:11.206 A:middle
UIColor and NSColor, UIFont and
NSFont, UIImage and NSImage,

00:39:11.816 --> 00:39:14.156 A:middle
and UIBezierPath
and NSBezierPath.

00:39:14.156 --> 00:39:17.866 A:middle
If you have a class that is
not in this set of four pairs

00:39:18.436 --> 00:39:20.806 A:middle
and you want to use the
strategy, please don't.

00:39:22.936 --> 00:39:24.686 A:middle
You will have undefined results.

00:39:24.786 --> 00:39:28.266 A:middle
So-- and the other thing to
keep in mind is that even

00:39:28.266 --> 00:39:31.186 A:middle
for these classes, it's
got limited API coverage.

00:39:31.186 --> 00:39:33.256 A:middle
So just because we're doing
this #define it doesn't mean

00:39:33.256 --> 00:39:35.716 A:middle
that we magically
get CMYK on UIColor.

00:39:36.056 --> 00:39:37.516 A:middle
We don't. It doesn't
happen that way.

00:39:38.096 --> 00:39:41.406 A:middle
So-- but the compiler
will warn you if you try

00:39:41.406 --> 00:39:42.586 A:middle
to use it so, that's good.

00:39:42.586 --> 00:39:46.396 A:middle
It will say, "Hey,
you-- this is an error."

00:39:46.396 --> 00:39:46.866 A:middle
So, anyway.

00:39:47.356 --> 00:39:50.436 A:middle
The other thing to
keep in mind is that,

00:39:50.596 --> 00:39:53.746 A:middle
if you're doing cross-platform
work which you obviously are

00:39:53.746 --> 00:39:55.676 A:middle
because you're in this talk
and that's what this is about,

00:39:56.156 --> 00:39:58.986 A:middle
and you're doing
archiving of your things,

00:39:58.986 --> 00:40:01.526 A:middle
it's going to require
some custom archiving.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:39:58.986 --> 00:40:01.526 A:middle
it's going to require
some custom archiving.

00:40:01.526 --> 00:40:03.396 A:middle
because if you archive,
what ultimately ends

00:40:03.396 --> 00:40:05.136 A:middle
up being a UIColor
and you try to bring

00:40:05.136 --> 00:40:08.346 A:middle
that into OS X using
iCloud, that is going to say,

00:40:08.346 --> 00:40:10.906 A:middle
"I don't know UIColor is,"
and it's going to barf on you.

00:40:10.906 --> 00:40:12.246 A:middle
So, you're going to have

00:40:12.246 --> 00:40:14.216 A:middle
to write some custom
archiving code for that.

00:40:14.416 --> 00:40:15.156 A:middle
And that's pretty easy.

00:40:15.156 --> 00:40:17.066 A:middle
What you just want to do is
you want to save it in the way

00:40:17.066 --> 00:40:18.586 A:middle
that both platforms
can recognize.

00:40:19.126 --> 00:40:23.316 A:middle
So, migration testing
is my next slide.

00:40:23.836 --> 00:40:26.546 A:middle
And one thing to keep in mind
is all of the stuff means

00:40:26.546 --> 00:40:28.536 A:middle
that if you're code
compiles, it doesn't mean--

00:40:28.536 --> 00:40:29.606 A:middle
necessarily mean it's correct.

00:40:30.076 --> 00:40:31.066 A:middle
So please test.

00:40:32.156 --> 00:40:34.426 A:middle
Unit tests are good,
very, very good.

00:40:34.426 --> 00:40:35.146 A:middle
You should use them.

00:40:35.566 --> 00:40:39.126 A:middle
Xcode has some cool things in
it, Xcode 5 for doing that.

00:40:39.306 --> 00:40:41.756 A:middle
Manual testing is important too
because there are some things

00:40:41.756 --> 00:40:43.416 A:middle
that you probably can't
cover in a unit test.

00:40:43.666 --> 00:40:45.156 A:middle
Don't forget to send
it to your users.

00:40:45.156 --> 00:40:47.446 A:middle
They have different system
configurations and they're going

00:40:47.446 --> 00:40:48.896 A:middle
to use the software
differently than you.

00:40:49.316 --> 00:40:50.646 A:middle
So, do beta testing.

00:40:50.646 --> 00:40:54.606 A:middle
That's why there's reason why
we have the provisioning profile

00:40:54.606 --> 00:40:56.246 A:middle
so you can send out your
apps to those people.

00:40:57.236 --> 00:41:01.146 A:middle
And testing plans, you know,
if you have a testing plan,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:40:57.236 --> 00:41:01.146 A:middle
And testing plans, you know,
if you have a testing plan,

00:41:01.416 --> 00:41:03.306 A:middle
then it means that every
single time that you come

00:41:03.306 --> 00:41:05.296 A:middle
out with a release and
you follow that plan,

00:41:05.296 --> 00:41:09.006 A:middle
it's going to mean that your
software is a lot more--

00:41:09.006 --> 00:41:11.896 A:middle
well, at least it's
tested, right?

00:41:11.896 --> 00:41:17.416 A:middle
Now, I stress this because the
number one reason why apps get

00:41:17.416 --> 00:41:20.076 A:middle
rejected from the app
store at least initially is

00:41:20.076 --> 00:41:22.476 A:middle
because they crash
during the review process.

00:41:22.476 --> 00:41:24.906 A:middle
So you don't want your app to be
one of those because it's going

00:41:24.906 --> 00:41:26.426 A:middle
to take more time
to get it reviewed.

00:41:26.426 --> 00:41:29.346 A:middle
And that's actually good
news because if it crashes

00:41:29.346 --> 00:41:30.686 A:middle
for the reviewers
then it's not going

00:41:30.686 --> 00:41:32.636 A:middle
to be crashing for your users.

00:41:32.636 --> 00:41:34.826 A:middle
That would even be worse if it
didn't-- so do your testing.

00:41:35.446 --> 00:41:38.366 A:middle
Anyway, I'm going to bring Dan
back on stage and he's going

00:41:38.366 --> 00:41:39.746 A:middle
to show you how we've
implemented some

00:41:39.746 --> 00:41:43.216 A:middle
of these strategies to
bring the iOS app to OS X.

00:41:43.216 --> 00:41:44.476 A:middle
Thanks Dan.

00:41:44.976 --> 00:41:47.716 A:middle
[applause]

00:41:48.216 --> 00:41:48.726 A:middle
&gt;&gt; Thank you, Cortis.

00:41:49.406 --> 00:41:51.566 A:middle
I've been hard at work while
Cortis has been talking

00:41:51.736 --> 00:41:55.346 A:middle
and now I have a near final
copy of my application.

00:41:56.046 --> 00:41:57.946 A:middle
So here we are, this
is an untitled document

00:41:58.376 --> 00:42:00.606 A:middle
and you see instead of
the toolbar at the bottom,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:58.376 --> 00:42:00.606 A:middle
and you see instead of
the toolbar at the bottom,

00:42:00.606 --> 00:42:03.176 A:middle
I have a toolbar on the
top that has selectors

00:42:03.176 --> 00:42:05.986 A:middle
for the different shapes and
the Stroke and Fill colors.

00:42:06.196 --> 00:42:07.516 A:middle
So-- but the same
things applies.

00:42:07.516 --> 00:42:09.606 A:middle
I click, I can create things.

00:42:10.056 --> 00:42:13.616 A:middle
I can even create a new
document and I can even--

00:42:13.616 --> 00:42:15.976 A:middle
I can use that to make the
same shape that I did before.

00:42:16.456 --> 00:42:17.456 A:middle
I can drag it.

00:42:18.356 --> 00:42:22.436 A:middle
All right, two documents here.

00:42:22.666 --> 00:42:24.286 A:middle
And I can change my Fill color.

00:42:24.286 --> 00:42:28.216 A:middle
Let's do lemon, or
a nice purple,

00:42:28.416 --> 00:42:29.276 A:middle
it could be different planet.

00:42:29.556 --> 00:42:31.846 A:middle
OK. So then here we have
[laughter] roughly the same

00:42:31.846 --> 00:42:33.756 A:middle
document here.

00:42:33.756 --> 00:42:39.096 A:middle
And I can give this a name, see,

00:42:39.646 --> 00:42:44.486 A:middle
"My House," saved
on the desktop.

00:42:44.676 --> 00:42:46.666 A:middle
So let's say-- OK
and I saved it.

00:42:47.696 --> 00:42:49.496 A:middle
I have made some other
changes by mistake.

00:42:49.896 --> 00:42:52.146 A:middle
Let's say-- oh, and
now I kind of want

00:42:52.146 --> 00:42:54.716 A:middle
to see, versions in the past.

00:42:54.716 --> 00:42:58.706 A:middle
So I can browse Versions
and then this is entirely

00:42:58.706 --> 00:43:01.036 A:middle
for free just by
adopting NSDocument.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:58.706 --> 00:43:01.036 A:middle
for free just by
adopting NSDocument.

00:43:01.186 --> 00:43:04.326 A:middle
And I can go-- oh, this is
the one I actually wanted us

00:43:04.326 --> 00:43:04.766 A:middle
to save.

00:43:05.446 --> 00:43:09.406 A:middle
Now, this is-- that's
how it works.

00:43:09.486 --> 00:43:13.376 A:middle
OK. So let's go back
and look at the code.

00:43:13.376 --> 00:43:17.926 A:middle
OK. So, I've re-organized
my code a bit.

00:43:17.926 --> 00:43:19.726 A:middle
I have-- I've broken
all the common code

00:43:19.726 --> 00:43:22.736 A:middle
out into the common source
and I have as different spots

00:43:22.776 --> 00:43:24.166 A:middle
for iOS and the MacOS source.

00:43:24.876 --> 00:43:27.266 A:middle
So in my common source,
we have all the model bits

00:43:27.716 --> 00:43:29.096 A:middle
and I was lying a
little bit before.

00:43:29.096 --> 00:43:31.996 A:middle
We had already done some-- a
little bit of work that like

00:43:32.086 --> 00:43:34.006 A:middle
of what Cortis was
talking about.

00:43:34.006 --> 00:43:38.316 A:middle
So here we have our platform
color and I can show you,

00:43:38.316 --> 00:43:39.536 A:middle
let's see, well, on a shape.

00:43:42.606 --> 00:43:43.776 A:middle
The shape has all these things.

00:43:43.776 --> 00:43:46.066 A:middle
It also has a Fill
Color and a Stroke Color

00:43:46.066 --> 00:43:47.876 A:middle
and it's using this
platform color.

00:43:48.916 --> 00:43:51.836 A:middle
And again, like what
Cortis is talking about,

00:43:52.196 --> 00:43:52.996 A:middle
let's see, let's go down.

00:43:52.996 --> 00:43:54.466 A:middle
This is about-- this
my archiving code.

00:43:54.466 --> 00:43:56.956 A:middle
This is when I-- how I
init in from the archive.

00:43:57.406 --> 00:43:59.806 A:middle
Let's hide this to
easier to see.

00:43:59.806 --> 00:44:03.866 A:middle
So you can see, I'm
using-- when I encode it,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:43:59.806 --> 00:44:03.866 A:middle
So you can see, I'm
using-- when I encode it,

00:44:04.366 --> 00:44:07.876 A:middle
I'm actually using a CIColor
to archive it to a file

00:44:07.876 --> 00:44:10.126 A:middle
because that's something
that exist on both platforms.

00:44:10.366 --> 00:44:15.036 A:middle
So that's something I can use
to make a consistent archive

00:44:15.036 --> 00:44:17.136 A:middle
so I can open the same
document on both sides.

00:44:17.286 --> 00:44:21.326 A:middle
So if the models are the same,

00:44:21.326 --> 00:44:23.206 A:middle
what is the controller
level look like?

00:44:23.416 --> 00:44:25.176 A:middle
So on the view side,
it looks very similar.

00:44:25.176 --> 00:44:28.046 A:middle
I've got a Document
View that respond--

00:44:28.046 --> 00:44:29.226 A:middle
that corresponds to the canvas.

00:44:29.746 --> 00:44:31.836 A:middle
I've got a Shape View that
corresponds to each shape

00:44:32.116 --> 00:44:34.606 A:middle
and these are both
subclasses of NSView.

00:44:35.826 --> 00:44:39.926 A:middle
And then on the controller
side, I've got a single document

00:44:39.926 --> 00:44:40.696 A:middle
because there's some--

00:44:40.976 --> 00:44:43.626 A:middle
the document can serve as the
controller for the whole thing

00:44:43.626 --> 00:44:45.516 A:middle
because there are not other
screens that could show up.

00:44:46.546 --> 00:44:51.056 A:middle
And the document really
only has support for--

00:44:51.156 --> 00:44:55.006 A:middle
really only need to do things
like it has some undo support.

00:44:55.006 --> 00:45:00.806 A:middle
And then it does-- this
is the data, same code.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:44:55.006 --> 00:45:00.806 A:middle
And then it does-- this
is the data, same code.

00:45:00.806 --> 00:45:02.876 A:middle
So this takes the archiving
and then it reads it.

00:45:03.546 --> 00:45:07.026 A:middle
So I can build this and
I'm back to my same data

00:45:07.206 --> 00:45:11.316 A:middle
and I should mention that I
can also do keyboard shortcuts.

00:45:11.316 --> 00:45:14.756 A:middle
So if I can do Command-Z,
see the Edit Menu Flash

00:45:14.756 --> 00:45:16.256 A:middle
and those shapes go away.

00:45:16.256 --> 00:45:18.556 A:middle
I can also go back
up here, do the redo.

00:45:18.556 --> 00:45:19.796 A:middle
This is all again for free just

00:45:19.796 --> 00:45:21.676 A:middle
by using NSUndoManager,
in my model.

00:45:22.296 --> 00:45:24.006 A:middle
And I can use keyboard
equivalence.

00:45:24.256 --> 00:45:25.856 A:middle
These are custom
things that I set up.

00:45:25.856 --> 00:45:28.816 A:middle
I can use keyboard
equivalence to change the shape.

00:45:29.346 --> 00:45:31.156 A:middle
And these are things that
our users are going to expect

00:45:31.156 --> 00:45:32.196 A:middle
when they come to
your application.

00:45:32.366 --> 00:45:35.656 A:middle
So I'm going to hand it back
over to Cortis to finish up.

00:45:36.036 --> 00:45:36.336 A:middle
Thank you.

00:45:36.481 --> 00:45:38.481 A:middle
[applause]

00:45:38.626 --> 00:45:39.186 A:middle
&gt;&gt; Thanks Dan.

00:45:39.286 --> 00:45:40.446 A:middle
That is some amazing work.

00:45:41.036 --> 00:45:42.836 A:middle
He's a fast coder isn't he?

00:45:42.836 --> 00:45:46.976 A:middle
OK. So, like I said before,
there's three things I'd

00:45:46.976 --> 00:45:49.206 A:middle
like you to take home today.

00:45:49.556 --> 00:45:52.796 A:middle
Number one is I want you
to rethink your iOS apps

00:45:53.076 --> 00:45:55.336 A:middle
in terms of OS X apps, OK?

00:45:55.496 --> 00:45:57.186 A:middle
So there are some changes that
you'll need to make there.

00:45:57.396 --> 00:45:59.876 A:middle
Number two, restructure
your code

00:45:59.876 --> 00:46:02.436 A:middle
so that your model is cleanly
separated from your view

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:45:59.876 --> 00:46:02.436 A:middle
so that your model is cleanly
separated from your view

00:46:02.436 --> 00:46:03.146 A:middle
and you're controller.

00:46:03.146 --> 00:46:05.956 A:middle
That way, you'll be
able to take advantage

00:46:05.956 --> 00:46:07.806 A:middle
of the maximum code
reuse possible.

00:46:08.536 --> 00:46:10.396 A:middle
And three, just get started.

00:46:10.596 --> 00:46:12.426 A:middle
You know, your customers
are going to love it

00:46:12.426 --> 00:46:14.426 A:middle
that you have an
OS X app especially

00:46:14.426 --> 00:46:16.876 A:middle
if you integrate your iOS
and OS X app experience.

00:46:16.876 --> 00:46:17.696 A:middle
So that's going to be great.

00:46:18.226 --> 00:46:19.316 A:middle
If you want more information,

00:46:19.316 --> 00:46:21.436 A:middle
please take contact
Jake Behrens.

00:46:21.856 --> 00:46:22.476 A:middle
He's awesome.

00:46:22.476 --> 00:46:24.796 A:middle
He will answer your
emails maybe.

00:46:25.296 --> 00:46:25.796 A:middle
I think he will.

00:46:26.226 --> 00:46:27.376 A:middle
&gt;&gt; He will.

00:46:27.786 --> 00:46:28.626 A:middle
&gt;&gt; He will, he says.

00:46:28.876 --> 00:46:33.446 A:middle
OK. Documentation, go
to AppKit documentation

00:46:33.446 --> 00:46:36.076 A:middle
at developer.apple.com/mac.

00:46:36.556 --> 00:46:39.716 A:middle
For the User Interface
Guidelines, this is important

00:46:39.716 --> 00:46:41.856 A:middle
because this is going to show
you how to make a great Mac app.

00:46:42.196 --> 00:46:43.676 A:middle
So go to that one.

00:46:43.676 --> 00:46:45.936 A:middle
That's developer.apple.com/ue.

00:46:46.326 --> 00:46:49.016 A:middle
The Developer Forums, a great
place to talk to developers.

00:46:49.806 --> 00:46:51.176 A:middle
We've got real developers there.

00:46:51.246 --> 00:46:55.096 A:middle
We haven't put Siri to work yet
there but real Apple developers.

00:46:56.726 --> 00:46:58.746 A:middle
Some great talks to look at.

00:46:59.016 --> 00:47:01.986 A:middle
So we have taken control
of Auto Layout in Xcode 5.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:46:59.016 --> 00:47:01.986 A:middle
So we have taken control
of Auto Layout in Xcode 5.

00:47:02.386 --> 00:47:03.646 A:middle
If you want to know
how to do X--

00:47:03.646 --> 00:47:05.416 A:middle
Auto Layout, that's
a great one to go to.

00:47:05.416 --> 00:47:07.736 A:middle
There are lots of also
talks from previous years

00:47:08.016 --> 00:47:08.986 A:middle
that you're going to have access

00:47:08.986 --> 00:47:11.956 A:middle
to on your WWDC app
for Auto Layout.

00:47:12.186 --> 00:47:14.416 A:middle
Introduction to SpriteKit, I
made a plug for it earlier.

00:47:14.416 --> 00:47:16.326 A:middle
That's going to be great
if you're doing any kind

00:47:16.326 --> 00:47:18.196 A:middle
of cross-platform 2D Game.

00:47:18.946 --> 00:47:21.316 A:middle
Best practices for Cocoa
Animation, that's a great place

00:47:21.316 --> 00:47:23.446 A:middle
to go to for information
on NSStackView

00:47:23.836 --> 00:47:27.566 A:middle
for core animation
changes and for things

00:47:27.566 --> 00:47:28.986 A:middle
about auto layout as well.

00:47:28.986 --> 00:47:29.716 A:middle
And we'll give you a few--

00:47:29.906 --> 00:47:31.386 A:middle
things about animation
and auto layout.

00:47:31.386 --> 00:47:33.196 A:middle
And then Introducing TextKit,
and then we haven't talked

00:47:33.196 --> 00:47:34.796 A:middle
about that at all
in this session

00:47:35.156 --> 00:47:37.086 A:middle
but if you've attended some
of the earlier sessions,

00:47:37.086 --> 00:47:38.376 A:middle
you'll probably be
quite pleased.

00:47:38.376 --> 00:47:39.456 A:middle
But we didn't really
talk about that

00:47:39.456 --> 00:47:42.066 A:middle
but the TextKit is
actually implemented

00:47:42.066 --> 00:47:46.326 A:middle
on the same fundamentals
as the OS X Cocoa Text.

00:47:46.766 --> 00:47:52.216 A:middle
So, all of the things that you
can do is Cocoa Text or sorry,

00:47:52.216 --> 00:47:54.936 A:middle
in TextKit that you've
learned about, you can also do

00:47:54.936 --> 00:47:56.666 A:middle
in Cocoa Text and your code
is going to be the same.

00:47:56.666 --> 00:47:59.676 A:middle
So, your NSLayoutManagers
and your NSTextStorage,

00:47:59.676 --> 00:48:01.036 A:middle
all of that is on OS X

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:47:59.676 --> 00:48:01.036 A:middle
all of that is on OS X

00:48:01.306 --> 00:48:02.886 A:middle
and you're code can
be largely the same.

00:48:03.286 --> 00:48:04.086 A:middle
Thank for coming.

00:48:04.086 --> 00:48:05.306 A:middle
Enjoy the rest of your show.

00:48:05.806 --> 00:48:08.973 A:middle
[Applause]

00:48:09.473 --> 00:48:12.640 A:middle
[ Silence ]

